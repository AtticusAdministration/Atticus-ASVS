chapter_id,chapter_name,section_id,section_name,req_id,req_description,level1,level2,level3,cwe,nist
V1,Кодировка и нейтрализация,V1.1,Архитектура кодировки и нейтрализации,V1.1.1,"Убедитесь, что входные данные декодируются или деэкранируются в каноническую форму (в стандартное представление) только один раз. Декодирование происходит только тогда, когда ожидаются закодированные данные в этой форме, и что это делается перед дальнейшей обработкой входных данных, например, это не выполняется после проверки или нейтрализации.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.1,Архитектура кодировки и нейтрализации,V1.1.2,"Убедитесь, что приложение выполняет кодирование и экранирование выходных данных либо в качестве последнего шага перед использованием интерпретатором, для которого оно предназначено, либо самим интерпретатором.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.2,Предотвращение инъекций,V1.2.1,"Убедитесь, что выходная кодировка для ответа HTTP, документа HTML или документа XML соответствует требуемому контексту, например, кодировка соответствующих символов для элементов HTML, атрибутов HTML, комментариев HTML, CSS или полей заголовка HTTP делается таким способом, чтобы избежать изменения структуры сообщения или документа.",✓,✓,✓,,
V1,Кодировка и нейтрализация,V1.2,Предотвращение инъекций,V1.2.2,"Убедитесь, что при динамическом построении URL-адресов недоверенные данные кодируются в соответствии с их контекстом (например, кодирование URL-адресов или кодирование base64url для query или path параметров или пути). Убедитесь, что разрешены только безопасные протоколы URL-адресов (например, запрещен javascript: или data:).",✓,✓,✓,,
V1,Кодировка и нейтрализация,V1.2,Предотвращение инъекций,V1.2.3,"Убедитесь, что при динамическом построении содержимого JavaScript (включая JSON) используется кодирование или экранирование выходных данных, чтобы избежать изменения структуры сообщения или документа (чтобы избежать JavaScript и JSON-инъекций).",✓,✓,✓,,
V1,Кодировка и нейтрализация,V1.2,Предотвращение инъекций,V1.2.4,"Убедитесь, что выборка данных (Redis, Memcached, чтение из файлов, обращение по API) или запросы к базе данных (например, SQL, HQL, NoSQL, Cypher) используют параметризованные запросы, ORM, Entity Frameworks или иным образом защищены от SQL-инъекций и других атак. Это также актуально при написании хранимых процедур.",✓,✓,✓,,
V1,Кодировка и нейтрализация,V1.2,Предотвращение инъекций,V1.2.5,"Убедитесь, что приложение защищено от внедрения команд ОС и что вызовы операционной системы используют параметризованные запросы к ОС или используют контекстное кодирование вывода командной строки.",✓,✓,✓,,
V1,Кодировка и нейтрализация,V1.2,Предотвращение инъекций,V1.2.6,"Убедитесь, что приложение защищено от LDAP-инъекций, или что реализованы специальные меры безопасности для их предотвращения.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.2,Предотвращение инъекций,V1.2.7,"Убедитесь, что приложение защищено от атак с использованием XPath-инъекций с помощью параметризации запросов или предварительно скомпилированных запросов.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.2,Предотвращение инъекций,V1.2.8,"Убедитесь, что процессоры LaTeX настроены безопасно (например, не используется флаг «–shell‑escape») и используется разрешенный список команд для предотвращения LaTeX-инъекций.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.2,Предотвращение инъекций,V1.2.9,"Убедитесь, что приложение экранирует специальные символы в регулярных выражениях (обычно с помощью обратной косой черты), чтобы предотвратить их ошибочную интерпретацию как метасимволов.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.2,Предотвращение инъекций,V1.2.10,"Убедитесь, что приложение защищено от внедрения формул CSV (CSV Injection). Приложение должно следовать правилам экранирования, определенным в RFC 4180, разделы 2.6 и 2.7, при экспорте содержимого CSV. Кроме того, при экспорте в CSV или другие форматы электронных таблиц (такие как XLS, XLSX или ODF) специальные символы (включая '=', '+', '-', '@', '\t' (табуляция), и '\0' (нулевой символ)) должны экранироваться одинарной кавычкой, если они появляются в качестве первого символа в значении поля.",,,✓,,
V1,Кодировка и нейтрализация,V1.3,Нейтрализация,V1.3.1,"Убедитесь, что все ненадежные входные данные HTML из редакторов WYSIWYG или аналогичных программ нейтрализуются с помощью известных и безопасных библиотек или функций фреймворка для санитизации HTML.",✓,✓,✓,,
V1,Кодировка и нейтрализация,V1.3,Нейтрализация,V1.3.2,"Убедитесь, что приложение избегает использования eval() или других динамических функций выполнения кода, таких как Spring Expression Language (SpEL). Если нет альтернативы, любой пользовательский ввод должен быть нейтрализован перед выполнением.",✓,✓,✓,,
V1,Кодировка и нейтрализация,V1.3,Нейтрализация,V1.3.3,"Убедитесь, что данные, передаваемые в потенциально опасный контекст, предварительно нейтрализованы, чтобы обеспечить соблюдение мер безопасности, таких как разрешение только тех символов, которые безопасны для данного контекста, и обрезка слишком длинного ввода.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.3,Нейтрализация,V1.3.4,"Убедитесь, что предоставленный пользователем файл .SVG проверен или нейтрализован, чтобы он содержал только теги и атрибуты (например, относящиеся к рисованию), которые безопасны для приложения, например, не содержат скриптов и foreignObject.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.3,Нейтрализация,V1.3.5,"Убедитесь, что приложение нейтралует или отключает предоставленные пользователем скриптовые данные или выражения шаблонных языков, такие как таблицы стилей Markdown, CSS или XSL, BBCode или аналогичные.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.3,Нейтрализация,V1.3.6,"Убедитесь, что приложение защищено от атак с подделкой запросов на стороне сервера (SSRF), проверяя ненадежные данные по разрешенному списку протоколов, доменов, путей и портов, а также нейтрализуя потенциально опасные символы перед использованием данных для вызова другой службы.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.3,Нейтрализация,V1.3.7,"Убедитесь, что приложение защищено от атак с внедрением шаблонов (template injection), не позволяя создавать шаблоны на основе недоверенных входных данных. Если нет альтернативы, любые недоверенные входные данные, включаемые динамически во время создания шаблона, должны быть нейтрализованы или тщательно провалидированы.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.3,Нейтрализация,V1.3.8,"Убедитесь, что приложение надлежащим образом нейтрализует недоверенные входные данные перед использованием в запросах Java Naming and Directory Interface (JNDI) и что JNDI настроен безопасно для предотвращения атак с использованием JNDI-инъекций.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.3,Нейтрализация,V1.3.9,"Убедитесь, что приложение нейтрализует данные перед отправкой в Memcache, чтобы предотвратить атаки методом инъекций.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.3,Нейтрализация,V1.3.10,"Убедитесь, что строки форматирования, которые могут быть использованы неожидаемым или вредоносным образом, нейтрализуются перед дальнейшим использованием.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.3,Нейтрализация,V1.3.11,"Убедитесь, что приложение нейтрализует вводимые пользователем данные перед передачей в почтовые системы для защиты от SMTP или IMAP-инъекций.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.3,Нейтрализация,V1.3.12,"Убедитесь, что регулярные выражения не содержат элементов, вызывающих экспоненциальный возврат, и убедитесь в нейтрализации недоверенных входных данных для предотвращения атак ReDoS или Runaway Regex.",,,✓,,
V1,Кодировка и нейтрализация,V1.4,"Память, строки и неуправляемый код",V1.4.1,"Убедитесь, что для обнаружения или предотвращения ситуаций переполнения стека, буфера или кучи приложение учитывает размер доступной области памяти при строковых операциях, копировании в память, в арифметике указателей и т.п.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.4,"Память, строки и неуправляемый код",V1.4.2,"Убедитесь, что для предотвращения целочисленного переполнения применяется контроль знака, диапазона и типа допустимых входных данных.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.4,"Память, строки и неуправляемый код",V1.4.3,"Убедитесь, что динамически выделенная память и ресурсы освобождены, а ссылки или указатели на освобожденную память удалены или установлены в значение null, чтобы предотвратить появление висячих указателей и уязвимостей, связанных с использованием памяти после освобождения.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.5,Безопасная десериализация,V1.5.1,"Убедитесь, что приложение настраивает XML-парсеры на использование строгой конфигурации и что небезопасные функции, такие как разрешение внешних сущностей, отключены для предотвращения атак XML eXternal Entity (XXE).",✓,✓,✓,,
V1,Кодировка и нейтрализация,V1.5,Безопасная десериализация,V1.5.2,"Убедитесь, что десериализация недоверенных данных обеспечивает безопасную обработку ввода, например, используя список разрешенных типов объектов или ограничивая типы объектов, определяемые клиентом, для предотвращения атак десериализации. Механизмы десериализации, которые явно определены как небезопасные, не должны использоваться с недоверенным вводом.",,✓,✓,,
V1,Кодировка и нейтрализация,V1.5,Безопасная десериализация,V1.5.3,"Убедитесь, что различные парсеры, используемые в приложении для одного и того же типа данных (например, парсеры JSON, XML, URL), выполняют парсинг согласованным образом и используют один и тот же механизм кодирования символов, чтобы избежать таких проблем, как уязвимости взаимодействия JSON (JSON Interoperability) или различное поведение анализа URI или файлов, которые могут использоваться в атаках удаленного включения файлов (RFI) или подделки запросов на стороне сервера (SSRF).",,,✓,,
V2,Валидация и бизнес-логика,V2.1,Документация валидации и бизнес-логики,V2.1.1,"Убедитесь, что в документации приложения определены правила проверки входных данных на соответствие ожидаемой структуре. Это могут быть распространённые форматы данных, такие как номера кредитных карт, адреса электронной почты, номера телефонов, или внутренний формат данных.",✓,✓,✓,,
V2,Валидация и бизнес-логика,V2.1,Документация валидации и бизнес-логики,V2.1.2,"Убедитесь, что в документации приложения указано, как проверять логическую и контекстную согласованность объединенных данных, например, проверять соответствие района и почтового индекса.",,✓,✓,,
V2,Валидация и бизнес-логика,V2.1,Документация валидации и бизнес-логики,V2.1.3,"Убедитесь, что ожидания относительно ограничений и проверок бизнес-логики задокументированы как для уровня отдельного пользователя, так и для глобального уровня всего приложения.",,✓,✓,,
V2,Валидация и бизнес-логика,V2.2,Валидация ввода,V2.2.1,"Убедитесь, что входные данные провалидированы для обеспечения соответствия бизнес- или функциональным ожиданиям. Валидация должна осуществляться либо по списку допустимых значений, шаблонов и диапазонов, либо путем сравнения входных данных с ожидаемой структурой и логическими ограничениями в соответствии с предопределенными правилами. Для L1 валидация может быть сосредоточена на входных данных, используемых для принятия конкретных бизнес-решений или решений, связанных с безопасностью. Для L2 и выше это должно применяться ко всем входным данным.",✓,✓,✓,,
V2,Валидация и бизнес-логика,V2.2,Валидация ввода,V2.2.2,"Убедитесь, что приложение разработано с принудительной валидацией входных данных на уровне доверенного сервиса. Хотя проверка на стороне клиента повышает удобство использования и должна поощряться, на неё не следует полагаться как на средство контроля безопасности.",✓,✓,✓,,
V2,Валидация и бизнес-логика,V2.2,Валидация ввода,V2.2.3,"Убедитесь, что приложение обеспечивает обоснованность комбинаций данных в соответствии с предопределенными правилам. Например: возраст должен соответствовать дате рождения; страна и почтовый индекс; количество товара в заказе и на складе.",,✓,✓,,
V2,Валидация и бизнес-логика,V2.3,Безопасность бизнес-логики,V2.3.1,"Убедитесь, что приложение обрабатывает потоки бизнес-логики для одного и того же пользователя в ожидаемом последовательном порядке шагов и без пропуска шагов.",✓,✓,✓,,
V2,Валидация и бизнес-логика,V2.3,Безопасность бизнес-логики,V2.3.2,"Убедитесь, что ограничения бизнес-логики реализованы в соответствии с документацией приложения, чтобы избежать эксплуатации её недостатков.",,✓,✓,,
V2,Валидация и бизнес-логика,V2.3,Безопасность бизнес-логики,V2.3.3,"Убедитесь, что транзакции используются на уровне бизнес-логики таким образом, что операция бизнес-логики либо выполняется полностью, либо откатывается к предыдущему корректному состоянию.",,✓,✓,,
V2,Валидация и бизнес-логика,V2.3,Безопасность бизнес-логики,V2.3.4,"Убедитесь, что на уровне бизнес-логики используются механизмы блокировки, чтобы гарантировать невозможность двойного бронирования ограниченных по количеству ресурсов (например, мест в театре или слотов доставки) путем манипулирования логикой приложения.",,✓,✓,,
V2,Валидация и бизнес-логика,V2.3,Безопасность бизнес-логики,V2.3.5,"Убедитесь, что для важных потоков бизнес-логики требуется многопользовательское (multi-user) одобрение, чтобы предотвратить несанкционированные или случайные действия. Потоки бизнес-логики могут включать, помимо прочего, крупные денежные переводы, утверждение контрактов, доступ к секретной информации или обход ограничений безопасности на производстве.",,,✓,,
V2,Валидация и бизнес-логика,V2.4,Анти-автоматизация,V2.4.1,"Убедитесь, что используются средства противодействия автоматизации для защиты от чрезмерных вызовов функций приложения, которые могут привести к утечке данных, созданию ненужных данных, исчерпанию квот, нарушению ограничений скорости, отказу в обслуживании или чрезмерному использованию дорогостоящих ресурсов.",,✓,✓,,
V2,Валидация и бизнес-логика,V2.4,Анти-автоматизация,V2.4.2,"Убедитесь, что потоки бизнес-логики требуют реалистичного человеческого времени, предотвращая чрезмерно быструю отправку транзакций.",,,✓,,
V3,Безопасность веб-интерфейса,V3.1,Документация по безопасности веб-интерфейса,V3.1.1,"Убедитесь, что в документации приложения описаны ожидаемые функции безопасности, которые должны поддерживать браузеры, использующие приложение (такие как HTTPS, HTTP Strict Transport Security (HSTS), Content Security Policy (CSP) и другие соответствующие механизмы безопасности HTTP). В документации также должно быть обязательно определено, как приложение должно себя вести, если некоторые из этих функций недоступны (например, предупреждать пользователя или блокировать доступ).",,,✓,,
V3,Безопасность веб-интерфейса,V3.2,Непреднамеренная интерпретация контента,V3.2.1,"Убедитесь, что реализованы меры безопасности, предотвращающие отображение контента или функций браузерами в HTTP-ответах в некорректном контексте (например, запрос API, загруженный пользователем файл или другой ресурс запрашивается напрямую). Возможные способы контроля включают: не обрабатывать содержимое, если поля заголовка HTTP-запроса (например, Sec-Fetch-*) не указывают на корректность контекста; использование заголовка и значения Content-Security-Policy: sandbox directive; или использование заголовка и значения Content-Disposition: attachment.",✓,✓,✓,,
V3,Безопасность веб-интерфейса,V3.2,Непреднамеренная интерпретация контента,V3.2.2,"Убедитесь, что данные, предназначенные для отображения в виде текста, а не визуализации в виде HTML, обрабатывается с использованием безопасных функций визуализации (таких как createTextNode или textContent), чтобы предотвратить непреднамеренное выполнение содержимого, такого как HTML или JavaScript.",✓,✓,✓,,
V3,Безопасность веб-интерфейса,V3.2,Непреднамеренная интерпретация контента,V3.2.3,"Убедитесь, что приложение избегает затирания DOM при использовании JavaScript на стороне клиента, применяя явные объявления переменных, выполняя строгую проверку типов, избегая сохранения глобальных переменных в объекте документа и реализуя изоляцию пространства имен.",,,✓,,
V3,Безопасность веб-интерфейса,V3.3,Настройка файлов cookie,V3.3.1,"Убедитесь, что у файлов cookie установлен атрибут «Secure», и если префикс «__Host‑» не используется в названии cookie, необходимо использовать префикс «__Secure‑».",✓,✓,✓,,
V3,Безопасность веб-интерфейса,V3.3,Настройка файлов cookie,V3.3.2,"Убедитесь, что значение атрибута SameSite каждой cookie установлено в соответствии с назначением cookie, чтобы ограничить подверженность атакам на восстановление пользовательского интерфейса и атакам с подделкой запросов на уровне браузера, обычно называемым подделкой межсайтовых запросов (CSRF).",,✓,✓,,
V3,Безопасность веб-интерфейса,V3.3,Настройка файлов cookie,V3.3.3,"Убедитесь, что cookie имеют префикс «__Host‑» в названии, если только они явно не предназначены для совместного использования с другими хостами.",,✓,✓,,
V3,Безопасность веб-интерфейса,V3.3,Настройка файлов cookie,V3.3.4,"Убедитесь, что если значение cookie не должно быть доступно для клиентских скриптов (например, сессионный токен), для cookie должен быть установлен атрибут «HttpOnly», а само значение должно передаваться клиенту только через поле заголовка «Set-Cookie».",,✓,✓,,
V3,Безопасность веб-интерфейса,V3.3,Настройка файлов cookie,V3.3.5,"Убедитесь, что при записи cookie приложением общая длина имени и значения cookie не превышает 4096 байт. Слишком большие cookie не будут сохраняться браузером и, следовательно, не будут отправляться с запросами, что помешает пользователю использовать функции приложения, зависящие от этого cookie.",,,✓,,
V3,Безопасность веб-интерфейса,V3.4,Заголовки механизма безопасности браузера,V3.4.1,"Убедитесь, что поле заголовка Strict‑Transport‑Security включено во все ответы для реализации политики HTTP Strict Transport Security (HSTS). Необходимо указать максимальное время не менее 1 года, а для L2 и выше политика должна применяться также ко всем поддоменам.",✓,✓,✓,,
V3,Безопасность веб-интерфейса,V3.4,Заголовки механизма безопасности браузера,V3.4.2,"Убедитесь, что поле заголовка Cross‑Origin Resource Sharing (CORS) «Access‑Control‑Allow‑Origin» имеет фиксированное значение, заданное приложением, или, если используется заголовок Origin, оно проверяется по списку доверенных источников. При необходимости использования «Access‑Control‑Allow‑Origin: *» убедитесь, что ответ не содержит конфиденциальной информации.",✓,✓,✓,,
V3,Безопасность веб-интерфейса,V3.4,Заголовки механизма безопасности браузера,V3.4.3,"Убедитесь, что HTTP-ответы содержат поле заголовка Content-Security-Policy, которое определяет директивы, гарантирующие загрузку и выполнение браузером только доверенного контента или ресурсов, чтобы ограничить выполнение вредоносного JavaScript. Как минимум, необходимо использовать глобальную политику, включающую директивы object-src «none» и base-uri «none», а также определяющую список разрешенных адресов или использующую одноразовые коды или хэши. Для приложений L3 необходимо определить политику использования 'nonce' или hash-конструкций для каждого ответа.",,✓,✓,,
V3,Безопасность веб-интерфейса,V3.4,Заголовки механизма безопасности браузера,V3.4.4,"Убедитесь, что все HTTP-ответы содержат поле заголовка «X‑Content‑Type‑Options: nosniff». Это предписывает браузерам не использовать анализ контента и определение типа MIME для данного ответа, а также требовать, чтобы значение поля заголовка Content‑Type в ответе соответствовало целевому ресурсу. Например, ответ на запрос стиля принимается только в том случае, если Content‑Type в ответе — «text/css». Это также позволяет браузеру использовать функцию Cross‑Origin Read Blocking (CORB).",,✓,✓,,
V3,Безопасность веб-интерфейса,V3.4,Заголовки механизма безопасности браузера,V3.4.5,"Убедитесь, что приложение устанавливает политику реферера для предотвращения утечки технически конфиденциальных данных сторонним сервисам через поле заголовка HTTP-запроса «Referer». Это можно сделать с помощью поля заголовка HTTP-ответа «Referrer‑Policy» или через атрибуты HTML-элемента. Конфиденциальные данные могут включать путь и данные запроса в URL-адресе, а для внутренних непубличных приложений также имя хоста.",,✓,✓,,
V3,Безопасность веб-интерфейса,V3.4,Заголовки механизма безопасности браузера,V3.4.6,"Убедитесь, что веб-приложение использует директиву frame‑ancestors поля заголовка Content‑Security‑Policy для каждого HTTP-ответа, чтобы гарантировать невозможность его внедрения по умолчанию и внедрение определённых ресурсов разрешено только при необходимости. Обратите внимание, что поле заголовка X‑Frame‑Options, хотя и поддерживается браузерами, устарело и не может быть использовано в качестве основы.",,✓,✓,,
V3,Безопасность веб-интерфейса,V3.4,Заголовки механизма безопасности браузера,V3.4.7,"Убедитесь, что в поле заголовка Content‑Security‑Policy указано место, куда следует сообщать о нарушениях.",,,✓,,
V3,Безопасность веб-интерфейса,V3.4,Заголовки механизма безопасности браузера,V3.4.8,"Убедитесь, что все HTTP-ответы, инициирующие рендеринг документа (например, ответы с типом содержимого text/html), включают поле заголовка Cross-Origin-Opener-Policy с директивой same-origin или same-origin-allow-popups (при необходимости). Это предотвращает атаки, злоупотребляющие общим доступом к объектам Window, такие как Tabnabbing и Frame Counting.",,,✓,,
V3,Безопасность веб-интерфейса,V3.5,Браузерное разделение источников,V3.5.1,"Убедитесь, что, если приложение не использует механизм предварительной проверки CORS для предотвращения запрещённых кросс-доменных запросов на использование чувствительного функционала, эти запросы валидируются на предмет их происхождения от самого приложения. Это можно сделать, используя и проверяя специальные токены для защиты от подделки или требуя дополнительные поля HTTP-заголовка, не входящие в список «простых заголовков» (CORS-safelisted request-header). Это необходимо для защиты от атак с подделкой запросов через браузер, широко известных как межсайтовая подделка запросов (CSRF).",✓,✓,✓,,
V3,Безопасность веб-интерфейса,V3.5,Браузерное разделение источников,V3.5.2,"Убедитесь, что если приложение использует механизм предварительной проверки CORS для предотвращения неразрешённого использования чувствительного функционала между источниками, вызов этого функционала невозможен с помощью запроса, который не запускает предварительную проверку CORS. Для этого может потребоваться проверка значений полей заголовка запроса «Origin» и «Content-Type» или использование дополнительного поля заголовка, не входящего в безопасный список CORS.",✓,✓,✓,,
V3,Безопасность веб-интерфейса,V3.5,Браузерное разделение источников,V3.5.3,"Убедитесь, что HTTP-запросы к чувствительному функционалу используют соответствующие HTTP-методы, такие как POST, PUT, PATCH или DELETE, а не методы, определённые спецификацией HTTP как «безопасные», такие как HEAD, OPTIONS или GET. В качестве альтернативы можно использовать строгую валидацию полей заголовка запроса Sec‑Fetch‑*, чтобы убедиться, что запрос не исходит из недопустимого кросс-доменного вызова, навигационного запроса или загрузки ресурса (например, источника изображения), где это не ожидается.",✓,✓,✓,,
V3,Безопасность веб-интерфейса,V3.5,Браузерное разделение источников,V3.5.4,"Убедитесь, что отдельные приложения размещены на разных именах хостов, чтобы использовать ограничения, предусмотренные политикой same-origin, включая то, как документы или скрипты, загруженные одним источником, могут взаимодействовать с ресурсами из другого источника, а также ограничения на cookie на основе имени хоста.",,✓,✓,,
V3,Безопасность веб-интерфейса,V3.5,Браузерное разделение источников,V3.5.5,"Убедитесь, что сообщения, полученные интерфейсом postMessage, отвергаются, если источник сообщения не является доверенным или если синтаксис сообщения недействителен.",,✓,✓,,
V3,Безопасность веб-интерфейса,V3.5,Браузерное разделение источников,V3.5.6,"Убедитесь, что функциональность JSONP не включена нигде в приложении, чтобы избежать атак с использованием межсайтового включения скриптов (XSSI).",,,✓,,
V3,Безопасность веб-интерфейса,V3.5,Браузерное разделение источников,V3.5.7,"Убедитесь, что данные, требующие авторизации, не включены в ответы ресурсов скриптов, таких как файлы JavaScript, чтобы предотвратить атаки с использованием межсайтового включения скриптов (XSSI).",,,✓,,
V3,Безопасность веб-интерфейса,V3.5,Браузерное разделение источников,V3.5.8,"Убедитесь, что аутентифицированные ресурсы (такие как изображения, видео, скрипты и другие документы) могут быть загружены или внедрены от имени пользователя только по назначению. Этого можно добиться путём строгой валидации полей заголовка HTTP-запроса Sec‑Fetch‑*, чтобы убедиться, что запрос не исходит из недопустимого кросс-доменного вызова, или путём установки ограничительного поля заголовка HTTP-ответа Cross‑Origin‑Resource‑Policy, чтобы браузер блокировал возвращаемый контент.",,,✓,,
V3,Безопасность веб-интерфейса,V3.6,Целостность внешних ресурсов,V3.6.1,"Убедитесь, что клиентские ресурсы, такие как библиотеки JavaScript, CSS или веб-шрифты, размещаются только на внешнем сервере (например, в сети доставки контента (Content Delivery Network)), если ресурс статический и имеет версии, а для проверки целостности ресурса используется механизм проверки целостности подресурсов (SRI). Если это невозможно, для каждого ресурса должно быть задокументировано решение по безопасности, обосновывающее это.",,,✓,,
V3,Безопасность веб-интерфейса,V3.7,Другие соображения по безопасности браузера,V3.7.1,"Убедитесь, что приложение использует только те клиентские технологии, которые по-прежнему поддерживаются и считаются безопасными. Примерами технологий, не соответствующих этому требованию, являются плагины NSAPI, Flash, Shockwave, ActiveX, Silverlight, NACL или клиентские Java-апплеты.",,✓,✓,,
V3,Безопасность веб-интерфейса,V3.7,Другие соображения по безопасности браузера,V3.7.2,"Убедитесь, что приложение будет автоматически перенаправлять пользователя на другое имя хоста или домен (который не контролируется приложением), только если этот хост или домен указаны в списке разрешенных.",,✓,✓,,
V3,Безопасность веб-интерфейса,V3.7,Другие соображения по безопасности браузера,V3.7.3,"Убедитесь, что приложение отображает уведомление, что пользователь перенаправляется на URL-адрес, находящийся вне контроля приложения, с возможностью отмены навигации.",,,✓,,
V3,Безопасность веб-интерфейса,V3.7,Другие соображения по безопасности браузера,V3.7.4,"Убедитесь, что домен верхнего уровня приложения (например, site.tld) ​​добавлен в публичный список предварительной загрузки (preload list) для HTTP Strict Transport Security (HSTS). Это гарантирует, что использование TLS для приложения будет встроено непосредственно в основные браузеры, а не будет полагаться только на поле заголовка ответа Strict-Transport-Security.",,,✓,,
V3,Безопасность веб-интерфейса,V3.7,Другие соображения по безопасности браузера,V3.7.5,"Убедитесь, что приложение ведет себя так, как описано в документации (например, предупреждает пользователя или блокирует доступ), если браузер, используемый для доступа к приложению, не поддерживает ожидаемые функции безопасности.",,,✓,,
V4,API и Веб-сервис,V4.1,Общая безопасность веб-сервисов,V4.1.1,"Убедитесь, что каждый HTTP-ответ с телом сообщения содержит заголовок Content-Type, который соответствует фактическому содержимому ответа, таким как «text/», «/+xml» и «/xml», включая параметр charset для указания безопасной кодировки символов (например, UTF-8, ISO-8859-1) согласно IANA Media Types.",✓,✓,✓,,
V4,API и Веб-сервис,V4.1,Общая безопасность веб-сервисов,V4.1.2,"Убедитесь, что только конечные точки, предназначенные для взаимодействия с пользователем через веб-браузер, автоматически перенаправляют HTTP на HTTPS, в то время как другие сервисы или конечные точки не реализуют прозрачные редиректы. Это необходимо, чтобы избежать ситуации, когда клиент ошибочно отправляет незашифрованные HTTP-запросы а из-за того, что запрос по HTTP автоматически перенаправляется на HTTPS другим сервисом без обработки на входе, утечка чувствительных данных остаётся незамеченной.",,✓,✓,,
V4,API и Веб-сервис,V4.1,Общая безопасность веб-сервисов,V4.1.3,"Убедитесь, что любой HTTP-заголовок, используемый приложением и устанавливаемый промежуточным уровнем, таким как балансировщик нагрузки, веб-прокси или backend-for-frontend сервис, не может быть переопределён конечным пользователем. Примеры заголовков: X-Real-IP, X-Forwarded-*, X-User-ID.",,✓,✓,,
V4,API и Веб-сервис,V4.1,Общая безопасность веб-сервисов,V4.1.4,"Убедитесь, что разрешены только HTTP-методы, которые явно поддерживаются приложением или его API (включая OPTIONS для preflight-запросов), а неиспользуемые методы заблокированы.",,,✓,,
V4,API и Веб-сервис,V4.1,Общая безопасность веб-сервисов,V4.1.5,"Убедитесь, что для особо чувствительных запросов или транзакций, проходящих через несколько систем, используются цифровые подписи на уровне сообщений, дополнительно к транспортным средствам защиты.",,,✓,,
V4,API и Веб-сервис,V4.2,Валидация структуры HTTP-сообщений,V4.2.1,"Убедитесь, что все компоненты приложения (включая балансировщики нагрузки, файрволы и серверы приложений) определяют границы входящих HTTP-сообщений с использованием механизма, соответствующего версии HTTP, чтобы предотвратить HTTP request smuggling. В HTTP/1.x, если присутствует заголовок Transfer-Encoding, заголовок Content-Length должен игнорироваться согласно RFC 2616. При использовании HTTP/2 или HTTP/3, если присутствует Content-Length, веб-сервер должен убедиться, что он совпадает с длиной DATA-фреймов.",,✓,✓,,
V4,API и Веб-сервис,V4.2,Валидация структуры HTTP-сообщений,V4.2.2,"Убедитесь, что при генерации HTTP-сообщений заголовок Content-Length не конфликтует с длиной содержимого, определяемой рамками протокола HTTP, чтобы предотвратить HTTP Request Smuggling.",,,✓,,
V4,API и Веб-сервис,V4.2,Валидация структуры HTTP-сообщений,V4.2.3,"Убедитесь, что приложение не отправляет и не принимает HTTP/2 и HTTP/3 сообщения с заголовками, специфичными для соединения, такими как Transfer-Encoding, чтобы предотвратить HTTP Response Splitting и HTTP Header Injection.",,,✓,,
V4,API и Веб-сервис,V4.2,Валидация структуры HTTP-сообщений,V4.2.4,"Убедитесь, что приложение принимает HTTP/2 и HTTP/3 запросы только в случае, если поля заголовков и их значения не содержат последовательностей CR (\r), LF (\n) или CRLF (\r\n), чтобы предотвратить HTTP Header Injection.",,,✓,,
V4,API и Веб-сервис,V4.2,Валидация структуры HTTP-сообщений,V4.2.5,"Убедитесь, что если приложение (бекенд или фронтенд) формирует и отправляет запросы, оно использует валидацию, очистку или другие механизмы, чтобы не создавать URI (например, для API-вызовов) или HTTP-заголовки (например, Authorization или Cookie) слишком большой длины, чтобы их не принимал приёмник. Это может привести к отказу в обслуживании, например, при отправке слишком длинного запроса (длинный cookie-заголовок), из-за чего сервер постоянно возвращает ошибку.",,,✓,,
V4,API и Веб-сервис,V4.3,GraphQL,V4.3.1,"Убедитесь, что используется белый список запросов, ограничение глубины вложенности, ограничение количества или анализ стоимости запроса, чтобы предотвратить DoS-атаки на уровне GraphQL или слоя данных из-за дорогостоящих вложенных запросов.",,✓,✓,,
V4,API и Веб-сервис,V4.3,GraphQL,V4.3.2,"Убедитесь, что introspection-запросы GraphQL отключены в продакшен-среде, если GraphQL API не предназначен для использования сторонними клиентами.",,✓,✓,,
V4,API и Веб-сервис,V4.4,WebSocket,V4.4.1,"Убедитесь, что для всех WebSocket-соединений используется WebSocket поверх TLS (WSS).",✓,✓,✓,,
V4,API и Веб-сервис,V4.4,WebSocket,V4.4.2,"Убедитесь, что при первоначальном HTTP WebSocket handshake заголовок Origin проверяется на соответствие списку разрешённых источников для приложения.",,✓,✓,,
V4,API и Веб-сервис,V4.4,WebSocket,V4.4.3,"Убедитесь, что если стандартное управление сессиями приложения не может быть использовано, применяются специальные токены, соответствующие требованиям безопасности управления сессиями.",,✓,✓,,
V4,API и Веб-сервис,V4.4,WebSocket,V4.4.4,"Убедитесь, что специальные токены управления сессиями WebSocket изначально получаются или валидируются через ранее аутентифицированную HTTPS-сессию при переходе от HTTPS к WebSocket.",,✓,✓,,
V5,Работа с файлами,V5.1,Документация по работе с файлами,V5.1.1,"Убедитесь, что документация определяет допустимые типы файлов, ожидаемые расширения и максимальный размер (включая распакованный размер) для каждой функции загрузки. Также убедитесь, что в документации указано, как файлы обезвреживаются для конечных пользователей (например, как приложение ведёт себя при обнаружении вредоносного файла).",,✓,✓,,
V5,Работа с файлами,V5.2,Загрузка файлов и содержимое,V5.2.1,"Убедитесь, что приложение принимает только те файлы, которые может обработать без потери производительности или отказа в обслуживании.",✓,✓,✓,,
V5,Работа с файлами,V5.2,Загрузка файлов и содержимое,V5.2.2,"Убедитесь, что при загрузке файла (включая файлы внутри архивов, таких как ZIP) приложение проверяет, соответствует ли расширение ожидаемому, и валидирует, соответствует ли содержимое типу, указанному в расширении. Это включает проверку начальных 'magic bytes', перезапись изображений, использование специализированных библиотек. Для уровня 1 — достаточно проверок для файлов, критичных с точки зрения бизнеса или безопасности. Для уровней 2 и выше — для всех файлов.",✓,✓,✓,,
V5,Работа с файлами,V5.2,Загрузка файлов и содержимое,V5.2.3,"Убедитесь, что приложение проверяет архивы (например, zip, gz, docx, odt) на максимально допустимый распакованный размер и максимальное количество файлов до распаковки.",,✓,✓,,
V5,Работа с файлами,V5.2,Загрузка файлов и содержимое,V5.2.4,"Убедитесь, что для каждого пользователя установлены квоты на общий размер и количество файлов, чтобы один пользователь не мог переполнить хранилище.",,,✓,,
V5,Работа с файлами,V5.2,Загрузка файлов и содержимое,V5.2.5,"Убедитесь, что приложение не позволяет загружать архивы с символьными ссылками (symlinks), если это не требуется по бизнес-логике. Если требуется — разрешён только строго определённый список допустимых символьных ссылок.",,,✓,,
V5,Работа с файлами,V5.2,Загрузка файлов и содержимое,V5.2.6,"Убедитесь, что приложение отклоняет изображения с числом пикселей выше допустимого, чтобы предотвратить атаки 'pixel flood'.",,,✓,,
V5,Работа с файлами,V5.3,Хранение файлов,V5.3.1,"Убедитесь, что загруженные или сгенерированные из недоверенного ввода файлы, находящиеся в публичной директории, не исполняются как серверный код при обращении к ним по HTTP.",✓,✓,✓,,
V5,Работа с файлами,V5.3,Хранение файлов,V5.3.2,"Убедитесь, что при создании путей к файлам приложение использует внутренние или доверенные данные, а не пользовательские имена файлов. Если использование пользовательских имён или метаданных необходимо — требуется строгая проверка и очистка. Это защита от path traversal, LFI, RFI и SSRF.",✓,✓,✓,,
V5,Работа с файлами,V5.3,Хранение файлов,V5.3.3,"Убедитесь, что при обработке файлов на сервере (например, при распаковке) игнорируются пути, заданные пользователем, во избежание уязвимостей типа 'zip slip'.",,,✓,,
V5,Работа с файлами,V5.4,Скачивание файлов,V5.4.1,"Убедитесь, что приложение валидирует или игнорирует имена файлов, переданных пользователем (включая в JSON, JSONP или URL-параметре), и указывает имя файла в заголовке Content-Disposition при ответе.",,✓,✓,,
V5,Работа с файлами,V5.4,Скачивание файлов,V5.4.2,"Убедитесь, что имена файлов, передаваемые (например, в HTTP-заголовках или вложениях в email), кодируются или очищаются (например, по RFC 6266), чтобы сохранить структуру документа и предотвратить инъекции.",,✓,✓,,
V5,Работа с файлами,V5.4,Скачивание файлов,V5.4.3,"Убедитесь, что файлы, полученные из недоверенных источников, сканируются антивирусом, чтобы не распространять известное вредоносное содержимое.",,✓,✓,,
V6,Аутентификация,V6.1,Документация по аутентификации,V6.1.1,"Убедитесь, что в документации приложения описано, как используются механизмы, такие как ограничение частоты запросов (rate limiting), защита от автоматизации и адаптивные реакции, для защиты от атак, таких как подстановка учётных данных и перебор паролей. Документация должна ясно описывать конфигурацию этих механизмов и предотвращение злонамеренной блокировки аккаунтов.",✓,✓,✓,,
V6,Аутентификация,V6.1,Документация по аутентификации,V6.1.2,"Убедитесь, что задокументирован список контекстно-зависимых слов, запрещённых к использованию в паролях. В него могут входить производные от названий организаций, продуктов, идентификаторов систем, кодовых названий проектов, названий отделов или ролей и тому подобное.",,✓,✓,,
V6,Аутентификация,V6.1,Документация по аутентификации,V6.1.3,"Убедитесь, что если приложение поддерживает несколько способов аутентификации, то все они документированы вместе с описанием применяемых средств защиты и уровнем стойкости аутентификации, которые должны быть одинаково применены ко всем способам.",,✓,✓,,
V6,Аутентификация,V6.2,Безопасность паролей,V6.2.1,"Убедитесь, что пользовательские пароли содержат не менее 8 символов. Рекомендуется минимальная длина в 15 символов.",✓,✓,✓,,
V6,Аутентификация,V6.2,Безопасность паролей,V6.2.2,"Убедитесь, что пользователи могут менять свои пароли.",✓,✓,✓,,
V6,Аутентификация,V6.2,Безопасность паролей,V6.2.3,"Убедитесь, что для смены пароля требуется ввести как текущий, так и новый пароль.",✓,✓,✓,,
V6,Аутентификация,V6.2,Безопасность паролей,V6.2.4,"Убедитесь, что при регистрации или смене пароля введённый пароль проверяется по списку как минимум из 3000 самых популярных паролей, соответствующих политике (например, минимальной длине).",✓,✓,✓,,
V6,Аутентификация,V6.2,Безопасность паролей,V6.2.5,"Убедитесь, что допускаются пароли любой структуры, без ограничений на использование определённых символов. Не должно быть требований по обязательному наличию заглавных/строчных букв, цифр или специальных символов.",✓,✓,✓,,
V6,Аутентификация,V6.2,Безопасность паролей,V6.2.6,"Убедитесь, что поля ввода пароля используют type=password для скрытия символов. Разрешено временное отображение всего пароля или последнего введённого символа.",✓,✓,✓,,
V6,Аутентификация,V6.2,Безопасность паролей,V6.2.7,"Убедитесь, что разрешены вставка (paste), использование менеджеров паролей браузера и внешних менеджеров паролей.",✓,✓,✓,,
V6,Аутентификация,V6.2,Безопасность паролей,V6.2.8,"Убедитесь, что пароль проверяется строго в том виде, в котором он был введён пользователем — без обрезки, изменения регистра и других модификаций.",✓,✓,✓,,
V6,Аутентификация,V6.2,Безопасность паролей,V6.2.9,"Убедитесь, что система позволяет использовать пароли длиной не менее 64 символов.",,✓,✓,,
V6,Аутентификация,V6.2,Безопасность паролей,V6.2.10,"Убедитесь, что пароль остаётся действительным, пока не будет скомпрометирован или не будет изменён пользователем. Приложение не должно требовать регулярной смены пароля.",,✓,✓,,
V6,Аутентификация,V6.2,Безопасность паролей,V6.2.11,"Убедитесь, что используется документированный список контекстно-зависимых слов (например, названия компаний, проектов и т.д.) для предотвращения использования легко угадываемых паролей.",,✓,✓,,
V6,Аутентификация,V6.2,Безопасность паролей,V6.2.12,"Убедитесь, что при регистрации или смене пароля проверяется, не входит ли он в список скомпрометированных (утёкших) паролей.",,✓,✓,,
V6,Аутентификация,V6.3,Общие требования к безопасности аутентификации,V6.3.1,"Убедитесь, что реализованы меры защиты от атак типа credential stuffing (массовая подстановка учётных данных) и brute-force (перебор паролей), согласно документации по безопасности приложения.",✓,✓,✓,,
V6,Аутентификация,V6.3,Общие требования к безопасности аутентификации,V6.3.2,"Убедитесь, что в приложении отсутствуют или отключены учётные записи по умолчанию (например, root, admin, sa).",✓,✓,✓,,
V6,Аутентификация,V6.3,Общие требования к безопасности аутентификации,V6.3.3,"Убедитесь, что для доступа к приложению используется либо механизм многофакторной аутентификации, либо комбинация однофакторных. Для уровня L3 один из факторов должен быть аппаратным, обеспечивающим защиту от фишинга, устойчивость к компрометации и подтверждение намерения аутентификации через явное действие пользователя (например, нажатие кнопки на FIDO-ключе или телефоне). Ослабление этих требований допускается только при наличии обоснования и компенсирующих мер.",,✓,✓,,
V6,Аутентификация,V6.3,Общие требования к безопасности аутентификации,V6.3.4,"Убедитесь, что при наличии нескольких способов аутентификации, они все задокументированы, и для них единообразно применяются меры защиты и уровни доверия.",,✓,✓,,
V6,Аутентификация,V6.3,Общие требования к безопасности аутентификации,V6.3.5,"Убедитесь, что пользователи получают уведомления о подозрительных попытках аутентификации (удачных и неудачных). Это может включать попытки (например, подключения) с необычного устройства или места, частично успешную MFA, попытку после долгого отсутствия или успешную аутентификацию после серии неудачных.",,,✓,,
V6,Аутентификация,V6.3,Общие требования к безопасности аутентификации,V6.3.6,"Убедитесь, что email не используется ни как однофакторный, ни как многофакторный механизм аутентификации.",,,✓,,
V6,Аутентификация,V6.3,Общие требования к безопасности аутентификации,V6.3.7,"Убедитесь, что пользователи получают уведомление при изменении данных аутентификации, таких как сброс пароля или изменение логина/email.",,,✓,,
V6,Аутентификация,V6.3,Общие требования к безопасности аутентификации,V6.3.8,"Убедитесь, что из сообщений об ошибке, HTTP-кодов ответа или различий во времени ответа нельзя определить, существует ли пользователь с таким логином. Это правило также должно применяться к функциям регистрации и восстановления пароля.",,,✓,,
V6,Аутентификация,V6.4,Жизненный цикл и восстановление факторов аутентификации,V6.4.1,"Убедитесь, что начальные пароли или коды активации, генерируемые системой, создаются с использованием надёжного генератора случайных чисел, соответствуют текущей политике паролей и истекают через короткий период времени либо после первого использования. Эти секреты не должны использоваться как постоянные пароли.",✓,✓,✓,,
V6,Аутентификация,V6.4,Жизненный цикл и восстановление факторов аутентификации,V6.4.2,"Убедитесь, что в системе отсутствуют подсказки к паролю или вопросы на знание («секретные вопросы»).",✓,✓,✓,,
V6,Аутентификация,V6.4,Жизненный цикл и восстановление факторов аутентификации,V6.4.3,"Убедитесь, что реализован безопасный процесс сброса забытого пароля, который не обходит активные механизмы многофакторной аутентификации.",,✓,✓,,
V6,Аутентификация,V6.4,Жизненный цикл и восстановление факторов аутентификации,V6.4.4,"Убедитесь, что в случае утраты одного из факторов MFA проводится удостоверение личности (identity proofing) на том же уровне, что и при первичной регистрации.",,✓,✓,,
V6,Аутентификация,V6.4,Жизненный цикл и восстановление факторов аутентификации,V6.4.5,"Убедитесь, что инструкции по обновлению истекающих механизмов аутентификации отправляются заранее, с достаточным запасом времени для выполнения замены, при необходимости с настройкой автоматических напоминаний.",,,✓,,
V6,Аутентификация,V6.4,Жизненный цикл и восстановление факторов аутентификации,V6.4.6,"Убедитесь, что администраторы могут инициировать процесс сброса пароля, но не могут задать или выбрать новый пароль за пользователя. Это исключает ситуацию, при которой администратор знает пароль пользователя.",,,✓,,
V6,Аутентификация,V6.5,Общие требования к многофакторной аутентификации,V6.5.1,"Убедитесь, что lookup-секреты, внеполосные коды/запросы и TOTP-коды можно использовать только один раз.",,✓,✓,,
V6,Аутентификация,V6.5,Общие требования к многофакторной аутентификации,V6.5.2,"Убедитесь, что при хранении lookup-секретов с энтропией менее 112 бит (например, 19 случайных буквенно-цифровых символов или 34 случайные цифры) они хэшируются с использованием разрешённого алгоритма хеширования паролей и случайной соли минимум 32 бита. Если у секрета ≥112 бит энтропии — допустимо использовать стандартный хэш.",,✓,✓,,
V6,Аутентификация,V6.5,Общие требования к многофакторной аутентификации,V6.5.3,"Убедитесь, что lookup-секреты, коды внеполосной аутентификации и сиды для TOTP генерируются с использованием криптографически стойкого генератора случайных чисел (CSPRNG), чтобы избежать предсказуемых значений.",,✓,✓,,
V6,Аутентификация,V6.5,Общие требования к многофакторной аутентификации,V6.5.4,"Убедитесь, что lookup-секреты и внеполосные коды аутентификации имеют минимум 20 бит энтропии (достаточно, например, 4 случайных алфавитно-цифровых символов или 6 случайных цифр).",,✓,✓,,
V6,Аутентификация,V6.5,Общие требования к многофакторной аутентификации,V6.5.5,"Убедитесь, что все внеполосные запросы, коды и токены, а также TOTP-коды имеют ограниченный срок действия. Максимум для out-of-band — 10 минут, для TOTP — 30 секунд.",,✓,✓,,
V6,Аутентификация,V6.5,Общие требования к многофакторной аутентификации,V6.5.6,"Убедитесь, что любой фактор аутентификации (включая физические устройства) может быть отозван в случае кражи или утери.",,,✓,,
V6,Аутентификация,V6.5,Общие требования к многофакторной аутентификации,V6.5.7,"Убедитесь, что биометрические механизмы аутентификации используются только как вторичный фактор — в сочетании с «чем-то, что вы знаете» или «чем-то, что у вас есть».",,,✓,,
V6,Аутентификация,V6.5,Общие требования к многофакторной аутентификации,V6.5.8,"Убедитесь, что TOTP-коды проверяются по источнику времени, полученному от доверенного сервиса, а не от клиента или недоверенного источника.",,,✓,,
V6,Аутентификация,V6.6,Внеполосные механизмы аутентификации,V6.6.1,"Убедитесь, что механизмы аутентификации через телефонную сеть общего пользования (PSTN) для доставки одноразовых паролей (OTP) по телефону или SMS используются только в случае предварительной валидации номера, при этом предлагаются альтернативные более безопасные методы (например, TOTP), и пользователю сообщаются риски. Для приложений уровня L3 использование телефона и SMS недопустимо.",,✓,✓,,
V6,Аутентификация,V6.6,Внеполосные механизмы аутентификации,V6.6.2,"Убедитесь, что внеполосные запросы, коды или токены привязаны к исходному запросу аутентификации, для которого они были сгенерированы, и не могут быть использованы повторно для других попыток.",,✓,✓,,
V6,Аутентификация,V6.6,Внеполосные механизмы аутентификации,V6.6.3,"Убедитесь, что внеполосные механизмы на основе кода защищены от атак методом подбора (brute force) путём применения ограничения частоты запросов (rate limiting). Также рекомендуется использовать коды с энтропией не менее 64 бит.",,✓,✓,,
V6,Аутентификация,V6.6,Внеполосные механизмы аутентификации,V6.6.4,"Убедитесь, что при использовании push-уведомлений для MFA применяется ограничение частоты (rate limiting), чтобы предотвратить атаки push-бомбинга. Также может помочь механизм сопоставления номеров (number matching).",,,✓,,
V6,Аутентификация,V6.7,Криптографические механизмы аутентификации,V6.7.1,"Убедитесь, что сертификаты, используемые для проверки криптографических утверждений об аутентификации, хранятся таким образом, чтобы исключить возможность их модификации.",,,✓,,
V6,Аутентификация,V6.7,Криптографические механизмы аутентификации,V6.7.2,"Убедитесь, что nonce (случайная строка), используемая в процессе вызова, имеет длину не менее 64 бит и является статистически уникальной или уникальной на протяжении всего срока службы криптографического устройства.",,,✓,,
V6,Аутентификация,V6.8,Аутентификация с использованием провайдера идентификаций (IdP),V6.8.1,"Убедитесь, что при поддержке несколькими IdP, невозможно подделать личность пользователя через другой IdP (например, с тем же user ID). Стандартным способом защиты является регистрация пользователя с использованием сочетания ID самого IdP (в качестве пространства имён) и пользовательского ID внутри IdP.",,✓,✓,,
V6,Аутентификация,V6.8,Аутентификация с использованием провайдера идентификаций (IdP),V6.8.2,"Убедитесь, что наличие и целостность цифровой подписи в утверждениях аутентификации (например, в JWT или SAML) всегда проверяются, а неподписанные или недействительные утверждения отклоняются.",,✓,✓,,
V6,Аутентификация,V6.8,Аутентификация с использованием провайдера идентификаций (IdP),V6.8.3,"Убедитесь, что SAML-утверждения обрабатываются только один раз в течение периода их действия, чтобы исключить атаки воспроизведения (replay attacks).",,✓,✓,,
V6,Аутентификация,V6.8,Аутентификация с использованием провайдера идентификаций (IdP),V6.8.4,"Убедитесь, что если приложение использует внешний поставщик идентификации (IdP) и для определенных функций требуется особый уровень, метод или срок действия аутентификации, то приложение использует данные, возвращаемые IdP, для проверки этих условий. Например, при использовании OIDC можно проверить значения полей ID Token — acr, amr, auth_time (если они есть). Если IdP не предоставляет эти данные, приложение должно иметь документированный план действий по умолчанию, предполагающий использование минимально допустимой силы аутентификации (например, одноступенчатая — логин и пароль).",,✓,✓,,
V7,Управление сессиями,V7.1,Документация по управлению сессиями,V7.1.1,"Убедитесь, что тайм-аут бездействия и абсолютное максимальное время жизни сессии задокументированы, соответствуют другим контрольным мерам и сопровождаются обоснованием любых отклонений от требований повторной аутентификации NIST SP 800-63B.",,✓,✓,,
V7,Управление сессиями,V7.1,Документация по управлению сессиями,V7.1.2,"Убедитесь, что документация определяет допустимое количество одновременных (параллельных) сессий для одного аккаунта, а также поведение системы и действия при достижении этого лимита.",,✓,✓,,
V7,Управление сессиями,V7.1,Документация по управлению сессиями,V7.1.3,"Убедитесь, что все системы, создающие и управляющие сессиями пользователей в рамках федеративной идентификации (например, SSO), задокументированы вместе с механизмами координации сроков действия сессий, условий завершения и случаев, требующих повторной аутентификации.",,✓,✓,,
V7,Управление сессиями,V7.2,Базовая безопасность сессий,V7.2.1,"Убедитесь, что все проверки сессионных токенов выполняются на доверенной серверной стороне.",✓,✓,✓,,
V7,Управление сессиями,V7.2,Базовая безопасность сессий,V7.2.2,"Убедитесь, что приложение использует либо автономные токены, либо ссылочные токены, которые генерируются динамически, не используя статические API-секреты или ключи.",✓,✓,✓,,
V7,Управление сессиями,V7.2,Базовая безопасность сессий,V7.2.3,"Убедитесь, что ссылочные токены являются уникальными, создаются с использованием криптографически безопасного генератора псевдослучайных чисел (CSPRNG) и обладают энтропией не менее 128 бит.",✓,✓,✓,,
V7,Управление сессиями,V7.2,Базовая безопасность сессий,V7.2.4,"Убедитесь, что при аутентификации пользователя (включая повторную) создается новый токен сессии, а текущий — аннулируется.",✓,✓,✓,,
V7,Управление сессиями,V7.3,Тайм-ауты сессии,V7.3.1,"Убедитесь, что есть тайм-аут бездействия, после которого требуется повторная аутентификация, в соответствии с анализом рисков и документированными решениями.",,✓,✓,,
V7,Управление сессиями,V7.3,Тайм-ауты сессии,V7.3.2,"Убедитесь, что установлено абсолютное максимальное время жизни сессии, по истечении которого требуется повторная аутентификация, в соответствии с анализом рисков и документированными решениями.",,✓,✓,,
V7,Управление сессиями,V7.4,Завершение сессий,V7.4.1,"Убедитесь, что после завершения сессии (logout, истечение срока) дальнейшее её использование невозможно. Для ссылочных токенов или сессий с сохранением состояния это означает аннулирование на сервере. Для self-contained токенов необходимо реализовать механизм отзыва, например, список отозванных токенов, проверку времени выпуска или ротацию ключей подписи для каждого пользователя.",✓,✓,✓,,
V7,Управление сессиями,V7.4,Завершение сессий,V7.4.2,"Убедитесь, что при удалении или отключении пользователя все активные сессии немедленно завершаются.",✓,✓,✓,,
V7,Управление сессиями,V7.4,Завершение сессий,V7.4.3,"Убедитесь, что после изменения или удаления факторов аутентификации (например, смена пароля или MFA) приложение предлагает завершить все другие активные сессии.",,✓,✓,,
V7,Управление сессиями,V7.4,Завершение сессий,V7.4.4,"Убедитесь, что на всех страницах, требующих аутентификации, имеется простой и видимый способ выхода.",,✓,✓,,
V7,Управление сессиями,V7.4,Завершение сессий,V7.4.5,"Убедитесь, что администраторы могут завершать активные сессии конкретного пользователя или всех пользователей.",,✓,✓,,
V7,Управление сессиями,V7.5,Защита от злоупотреблений сессией,V7.5.1,"Убедитесь, что приложение требует полной повторной аутентификации перед изменением чувствительных атрибутов аккаунта, которые могут влиять на аутентификацию (например, email, номер телефона, настройки MFA или данных восстановления доступа).",,✓,✓,,
V7,Управление сессиями,V7.5,Защита от злоупотреблений сессией,V7.5.2,"Убедитесь, что пользователь может просматривать и (после повторной аутентификации хотя бы по одному фактору) завершать активные сессии.",,✓,✓,,
V7,Управление сессиями,V7.5,Защита от злоупотреблений сессией,V7.5.3,"Убедитесь, что перед выполнением критически важных операций приложение требует повторной аутентификации (по крайней мере, одного фактора) или дополнительной проверки.",,,✓,,
V7,Управление сессиями,V7.6,Федеративная повторная аутентификация,V7.6.1,"Убедитесь, что срок действия и завершение сессий между RP и IdP соответствуют документации и включают повторную аутентификацию, если достигнут максимальный допустимый интервал между событиями аутентификации.",,✓,✓,,
V7,Управление сессиями,V7.6,Федеративная повторная аутентификация,V7.6.2,"Убедитесь, что создание сессии требует согласия пользователя или явного действия, предотвращающего несанкционированное создание сессий без участия пользователя.",,✓,✓,,
V8,Авторизация,V8.1,Документация по авторизации,V8.1.1,"Убедитесь, что документация по авторизации определяет правила ограничения доступа на уровне функций и на уровне данных на основе прав субъекта и атрибутов ресурса.",✓,✓,✓,,
V8,Авторизация,V8.1,Документация по авторизации,V8.1.2,"Убедитесь, что документация по авторизации определяет правила ограничения доступа на уровне полей (как на чтение, так и на запись) на основе прав субъекта и атрибутов ресурса. Эти правила могут зависеть от других атрибутов объекта данных, например, статуса.",,✓,✓,,
V8,Авторизация,V8.1,Документация по авторизации,V8.1.3,"Убедитесь, что документация определяет, какие атрибуты окружения и контекста (например, время суток, IP-адрес, местоположение, устройство) используются приложением для принятия решений в области аутентификации и авторизации.",,,✓,,
V8,Авторизация,V8.1,Документация по авторизации,V8.1.4,"Убедитесь, что документация по аутентификации и авторизации определяет, как используются факторы окружения и контекста в принятии решений, наряду с правилами доступа к функциям, данным и полям. Документация должна содержать оцениваемые атрибуты, пороговые значения риска, действия (разрешить, отказать, повысить уровень аутентификации и др.).",,,✓,,
V8,Авторизация,V8.2,Архитектура авторизации,V8.2.1,"Убедитесь, что приложение обеспечивает доступ на уровне функций (function-level) только субъектам с явными разрешениями.",✓,✓,✓,,
V8,Авторизация,V8.2,Архитектура авторизации,V8.2.2,"Убедитесь, что приложение обеспечивает доступ на уровне данных (data-specific) только тем субъектам, которым явно предоставлены права к определённым элементам данных, чтобы предотвратить IDOR (Insecure Direct Object Reference) и BOLA-уязвимости (Broken Object Level Authorization).",✓,✓,✓,,
V8,Авторизация,V8.2,Архитектура авторизации,V8.2.3,"Убедитесь, что приложение обеспечивает доступ на уровне полей (field-level) только тем субъектам, которым явно предоставлены права к определённым полям, чтобы предотвратить BOPLA (Broken Object Property Level Authorization).",,✓,✓,,
V8,Авторизация,V8.2,Архитектура авторизации,V8.2.4,"Убедитесь, что реализованы адаптивные меры безопасности, основанные на атрибутах окружения и контекста субъекта (время, местоположение, IP, устройство), которые используются для принятия решений об аутентификации и авторизации, как это определено в документации приложения. Эти меры должны применяться как при попытке субъекта начать новую сессию, так и во время существующей сессии.",,,✓,,
V8,Авторизация,V8.3,Авторизация на уровне операций,V8.3.1,"Убедитесь, что правила авторизации реализуются на доверенном сервисном уровне и не зависят от элементов, которые может контролировать клиент (например, JavaScript на стороне клиента).",✓,✓,✓,,
V8,Авторизация,V8.3,Авторизация на уровне операций,V8.3.2,"Убедитесь, что изменения значений, влияющих на авторизацию, применяются немедленно. Если это невозможно (например, при использовании автономных токенов), должны быть реализованы компенсирующие меры: оповещения о попытке несанкционированного действия и откат изменений. Обратите внимание, что данный подход не предотвращает утечку информации.",,,✓,,
V8,Авторизация,V8.3,Авторизация на уровне операций,V8.3.3,"Убедитесь, что доступ к объекту осуществляется на основе прав субъекта, инициировавшего запрос, а не прав промежуточного сервиса, действующего от его имени. Например, если пользователь обращается к веб-сервису с автономным токеном для аутентификации, а сервис затем запрашивает данные у другого сервиса, второй сервис должен использовать токен пользователя, а не токен первого сервиса для принятия решения о доступе.",,,✓,,
V8,Авторизация,V8.4,Прочие аспекты авторизации,V8.4.1,"Убедитесь, что в мультитенантных приложениях реализованы механизмы, предотвращающие действия потребителя в отношении арендаторов, к которым у него нет доступа.",,✓,✓,,
V8,Авторизация,V8.4,Прочие аспекты авторизации,V8.4.2,"Убедитесь, что доступ к административным интерфейсам защищён несколькими уровнями контроля, включая непрерывную проверку личности, контроль защищённости устройства и анализ контекстных рисков. Недостаточно опираться только на IP-адрес или доверенные устройства.",,,✓,,
V9,Автономные токены,V9.1,Источник токена и его целостность,V9.1.1,"Убедитесь, что автономные токены проверяются на целостность с помощью цифровой подписи или MAC, прежде чем доверять их содержимому.",✓,✓,✓,,
V9,Автономные токены,V9.1,Источник токена и его целостность,V9.1.2,"Проверяйте, что автономные токены создаются и проверяются исключительно с помощью алгоритмов из списка допустимых в данном контексте. Список допустимых алгоритмов должен включать только разрешенные алгоритмы (желательно либо только симметричные, либо только асимметричные) и ни в коем случае не содержать алгоритм None. Если необходимо поддерживать оба типа алгоритмов, потребуются дополнительные средства контроля для предотвращения путаницы с ключами (key confusion).",✓,✓,✓,,
V9,Автономные токены,V9.1,Источник токена и его целостность,V9.1.3,"Убедитесь, что ключи, используемые для проверки автономных токенов, получены из доверенных, предварительно настроенных источников. Это предотвращает возможность указания злоумышленниками ненадёжных источников и ключей. Для JWT и других JWS структур заголовки 'jku', 'x5u' и 'jwk' должны проверяться по белому списку.",✓,✓,✓,,
V9,Автономные токены,V9.2,Содержимое токена,V9.2.1,"Убедитесь, что при указанном сроке действия токен и его содержимое принимаются только в том случае, если срок действия токена не истёк. Например, для JWT нужно проверить поля 'nbf' и 'exp'.",✓,✓,✓,,
V9,Автономные токены,V9.2,Содержимое токена,V9.2.2,"Убедитесь, что сервис, принимающий токен, проверяет его тип и соответствие назначению перед обработкой содержимого токена. Например, для принятия решений об авторизации могут быть приняты только Access Token, а для подтверждения аутентификации пользователя — только ID Token.",,✓,✓,,
V9,Автономные токены,V9.2,Содержимое токена,V9.2.3,"Убедитесь, что сервис принимает только токены, предназначенные для использования с этим сервисом (audience). Для JWT это можно сделать, проверив наличие утверждения «aud» по белому списку, определенному в сервисе.",,✓,✓,,
V9,Автономные токены,V9.2,Содержимое токена,V9.2.4,"Убедитесь, что, если эмитент токенов использует один и тот же закрытый ключ для выпуска токенов различным сервисам (audiences), выпущенные токены содержат явное указание целевых сервисов. Это предотвратит повторное использования токенов в не предназначенных для них сервисах. Если идентификатор сервиса (audience identifier) назначается динамически, эмитент токенов должен проверить audiences для исключения подмены получателей (audience impersonation).",,✓,✓,,
V10,OAuth и OIDC,V10.1,Общие требования безопасности OAuth и OIDC,V10.1.1,"Убедитесь, что токены передаются только тем компонентам, которым они действительно необходимы. Например, при использовании схемы backend-for-frontend для браузерных JavaScript-приложений, access и refresh токены должны быть доступны только на backend.",,✓,✓,,
V10,OAuth и OIDC,V10.1,Общие требования безопасности OAuth и OIDC,V10.1.2,"Убедитесь, что клиент принимает значения от авторизационного сервера (например, authorization code или ID Token) только если они получены в результате авторизационного потока, инициированного в той же сессии пользовательского агента и в рамках той же транзакции. Для этого клиентские секреты, такие как proof key для code exchange (PKCE) — 'code_verifier', 'state' или OIDC 'nonce' — должны быть непредсказуемыми, специфичными для транзакции и надежно привязанными как к клиенту, так и к сессии пользовательского агента, в которой началась транзакция.",,✓,✓,,
V10,OAuth и OIDC,V10.2,Клиент OAuth,V10.2.1,"Убедитесь, что если используется механизм authorization code flow, OAuth клиент защищён от CSRF, вызывающих запросы токенов либо за счёт использования механизма proof key for code exchange (PKCE), либо за счёт проверки параметра 'state', который был отправлен в запросе авторизации.",,✓,✓,,
V10,OAuth и OIDC,V10.2,Клиент OAuth,V10.2.2,"Убедитесь, что если OAuth клиент может взаимодействовать с более чем одним сервером авторизации, у него есть защита от атак смешивания (mix-up attacks). Например, клиент должен требовать, чтобы сервер авторизации возвращал параметр 'iss' и проверять его в ответах на авторизацию и токены.",,✓,✓,,
V10,OAuth и OIDC,V10.2,Клиент OAuth,V10.2.3,"Убедитесь, что OAuth клиент запрашивает только необходимые области доступа (scopes) или другие параметры авторизации в запросах к серверу авторизации.",,,✓,,
V10,OAuth и OIDC,V10.3,Сервер ресурсов OAuth,V10.3.1,"Убедитесь, что сервер ресурсов принимает только те access токены, которые предназначены для использования с этим сервисом (свойство audience). Эта принадлежность сервису может быть включена в структурированный access токен (например, в поле 'aud' в JWT) или проверяться через endpoint интроспекции токена.",,✓,✓,,
V10,OAuth и OIDC,V10.3,Сервер ресурсов OAuth,V10.3.2,"Убедитесь, что сервер ресурсов принимает решения по авторизации на основе claims из access токена, определяющих делегированную авторизацию. Если присутствуют claims, такие как 'sub', 'scope' и 'authorization_details', они должны участвовать в принятии решения.",,✓,✓,,
V10,OAuth и OIDC,V10.3,Сервер ресурсов OAuth,V10.3.3,"Убедитесь, что если для принятия решения по контролю доступа необходимо однозначно идентифицировать пользователя из access токена (JWT или ответа интроспекции), сервер ресурсов использует claims, которые не могут быть переприсвоены другим пользователям. Обычно это комбинация claims 'iss' и 'sub'.",,✓,✓,,
V10,OAuth и OIDC,V10.3,Сервер ресурсов OAuth,V10.3.4,"Убедитесь, что если сервер ресурсов требует определённой силы аутентификации, методов или свежести аутентификации, он проверяет, что предъявленный access токен удовлетворяет этим требованиям. Например, при наличии, могут использоваться claims OIDC 'acr', 'amr' и 'auth_time'.",,✓,✓,,
V10,OAuth и OIDC,V10.3,Сервер ресурсов OAuth,V10.3.5,"Убедитесь, что сервер ресурсов предотвращает использование украденных access токенов или их повторное использование (replay) неавторизованными лицами, требуя access токены с подтверждением отправителя — например, Mutual TLS для OAuth 2 или OAuth 2 Demonstration of Proof of Possession (DPoP).",,,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.1,"Убедитесь, что сервер авторизации проверяет URI перенаправления (redirect URI), сверяя его с заранее зарегистрированным списком разрешённых URI для данного клиента (allowlist), используя точное сравнение строк.",✓,✓,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.2,"Убедитесь, что если сервер авторизации возвращает authorization code в ответе авторизации, этот код может быть использован только один раз для запроса токена. При втором валидном запросе с уже использованным кодом сервер должен отклонить запрос и отозвать любые токены, связанные с этим кодом.",✓,✓,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.3,"Убедитесь, что authorization code имеет короткое время жизни. Максимальная продолжительность — до 10 минут для приложений L1 и L2 и до 1 минуты для приложений L3.",✓,✓,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.4,"Убедитесь, что сервер авторизации для конкретного клиента разрешает использование только тех типов авторизации, которые необходимы этому клиенту. Обратите внимание, что тип авторизации Implicit flow и Resource Owner Password Credentials flow больше не должны использоваться.",✓,✓,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.5,"Убедитесь, что сервер авторизации предотвращает атаки повторного использования refresh токенов для публичных клиентов, предпочтительно используя sender-constrained refresh токены, такие как DPoP или сертификат-связанные токены с mutual TLS (mTLS). Для L1 и L2 допускается ротация refresh токенов с обязательной их инвалидацией после использования. Если используется ротация, сервер должен отозвать все refresh токены при попытке использовать уже инвалидированный токен.",✓,✓,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.6,"Убедитесь, что при использовании типа авторизации «Authorization Code» сервер предотвращает атаки перехвата authorization code, требуя Proof Key for Code Exchange (PKCE). В запросах авторизации сервер должен требовать валидное значение 'code_challenge' и не принимать 'code_challenge_method' со значением 'plain'. В запросах токена обязательно валидировать параметр 'code_verifier'.",,✓,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.7,"Убедитесь, что если сервер авторизации поддерживает динамическую регистрацию клиентов без аутентификации, он минимизирует риски вредоносных клиентов. Сервер должен валидировать метаданные клиента (например, зарегистрированные URI), обеспечивать согласие пользователя и предупреждать пользователя перед обработкой запроса авторизации от недоверенного клиента.",,✓,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.8,"Убедитесь, что refresh токены имеют абсолютный срок действия, включая случаи, когда применяется скользящее время истечения срока.",,✓,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.9,"Убедитесь, что пользователи могут отзывать refresh токены и reference access токены через пользовательский интерфейс сервера авторизации для снижения риска от вредоносных клиентов или кражи токенов.",,✓,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.10,"Убедитесь, что конфиденциальный клиент аутентифицируется при взаимодействии с сервером авторизации через backchannel, например при запросах токена, pushed authorization requests (PAR) и запросах на отзыв токенов.",,✓,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.11,"Убедитесь, что конфигурация сервера авторизации назначает OAuth клиенту только необходимые области доступа (scopes).",,✓,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.12,"Убедитесь, что для конкретного клиента сервер авторизации разрешает только те значения 'response_mode', которые необходимы этому клиенту. Например, сервер должен валидировать это значение против ожидаемых или использовать pushed authorization request (PAR) или JWT-secured Authorization Request (JAR).",,,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.13,"Убедитесь, что грант типа 'code' всегда используется вместе с pushed authorization requests (PAR).",,,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.14,"Убедитесь, что сервер авторизации выдаёт только sender-constrained (Proof-of-Possession) access токены, либо с сертификат-связанными токенами через mutual TLS (mTLS), либо DPoP-bound токены (Demonstration of Proof of Possession).",,,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.15,"Убедитесь, что для серверного клиента (не выполняющегося на устройстве конечного пользователя) сервер авторизации проверяет, что значение параметра 'authorization_details' исходит из клиентского backend и что пользователь не изменял его. Например, это достигается использованием pushed authorization request (PAR) или JWT-secured Authorization Request (JAR).",,,✓,,
V10,OAuth и OIDC,V10.4,Сервер авторизации OAuth,V10.4.16,"Убедитесь, что клиент является конфиденциальным и сервер авторизации требует использования сильных методов аутентификации клиента (основанных на криптографии с открытым ключом и устойчивых к атакам повторного воспроизведения), таких как mutual TLS ('tls_client_auth', 'self_signed_tls_client_auth') или private key JWT ('private_key_jwt').",,,✓,,
V10,OAuth и OIDC,V10.5,Клиент OIDC,V10.5.1,"Убедитесь, что клиент (relying party) защищается от повторного использования ID Token (replay-атак). Например, это достигается проверкой того, что значение 'nonce' в ID Token совпадает со значением 'nonce', отправленным в запросе аутентификации провайдеру OpenID (authorization server).",,✓,✓,,
V10,OAuth и OIDC,V10.5,Клиент OIDC,V10.5.2,"Убедитесь, что клиент однозначно идентифицирует пользователя по утверждениям (claims) ID Token, обычно это 'sub', который не может быть переназначен другому пользователю (в пределах конкретного провайдера идентификации).",,✓,✓,,
V10,OAuth и OIDC,V10.5,Клиент OIDC,V10.5.3,"Убедитесь, что клиент отклоняет попытки злоумышленного сервера авторизации выдавать себя за другой сервер авторизации через метаданные сервера авторизации. Клиент должен отклонить метаданные, если URL издателя (issuer) в метаданных не совпадает точно с преднастроенным URL издателя, ожидаемым клиентом.",,✓,✓,,
V10,OAuth и OIDC,V10.5,Клиент OIDC,V10.5.4,"Убедитесь, что клиент проверяет, что ID Token предназначен для него (проверка audience), сравнивая значение 'aud' в токене с 'client_id' клиента.",,✓,✓,,
V10,OAuth и OIDC,V10.5,Клиент OIDC,V10.5.5,"Убедитесь, что при использовании OIDC back-channel logout клиент снижает риск отказа в обслуживании, вызванный принудительным выходом из системы и путаницей между разными типами JWT (cross-JWT confusion) в процессе логаута. Клиент должен проверить, что токен выхода корректно типизирован со значением 'logout+jwt', содержит claim 'event' с правильным именем участника и не содержит 'nonce'. Также рекомендуется установить короткий срок действия токена (например, 2 минуты).",,✓,✓,,
V10,OAuth и OIDC,V10.6,Провайдер OpenID,V10.6.1,"Убедитесь, что провайдер OpenID допускает только значения 'code', 'ciba', 'id_token' или 'id_token code' для параметра response mode. При этом предпочтение отдаётся 'code' по сравнению с 'id_token code' (гибридный поток OIDC), а значение 'token' (любой Implicit flow) не должно использоваться.",,✓,✓,,
V10,OAuth и OIDC,V10.6,Провайдер OpenID,V10.6.2,"Убедитесь, что провайдер OpenID предотвращает отказ в обслуживании (DoS) через принудительный выход (logout), запрашивая явное подтверждение от конечного пользователя или, если применимо, проверяя параметры в запросе выхода (инициированном relying party), например параметр 'id_token_hint'.",,✓,✓,,
V10,OAuth и OIDC,V10.7,Управление согласием,V10.7.1,"Убедитесь, что авторизационный сервер обеспечивает получение согласия пользователя для каждого запроса авторизации. Если личность клиента не может быть подтверждена, сервер авторизации всегда должен явно запрашивать согласие пользователя.",,✓,✓,,
V10,OAuth и OIDC,V10.7,Управление согласием,V10.7.2,"Убедитесь, что при запросе согласия пользователя авторизационный сервер предоставляет достаточную и понятную информацию о том, на что даётся согласие. При необходимости это должно включать характер запрашиваемых разрешений (обычно основанных на scope, ресурсном сервере, деталях авторизации Rich Authorization Requests (RAR)), идентификацию авторизованного приложения и срок действия этих разрешений.",,✓,✓,,
V10,OAuth и OIDC,V10.7,Управление согласием,V10.7.3,"Убедитесь, что пользователь может просматривать, изменять и отзывать согласия, которые он предоставил, через авторизационный сервер.",,✓,✓,,
V11,Криптография,V11.1,Инвентаризация и документирование криптографии,V11.1.1,"Убедитесь, что задокументирована политика управления криптографическими ключами и описан их жизненный цикл в соответствии со стандартом управления ключей, таким как NIST SP 800-57. Убедитесь, что ключи известны только тем сущностям, которым они должны быть доступны (например, ключи не передавались более чем двум участникам для общих секретов и более чем одному участнику для приватных ключей).",,✓,✓,,
V11,Криптография,V11.1,Инвентаризация и документирование криптографии,V11.1.2,"Убедитесь, что проводится инвентаризация криптографических средств, которая непрерывно поддерживается, регулярно обновляется и включает все криптографические ключи, алгоритмы и сертификаты, используемые в приложении. Также должна быть задокументирована информация о том, где ключи могут и не могут использоваться в системе, а также какие типы данных могут и не могут быть защищены с помощью этих ключей.",,✓,✓,,
V11,Криптография,V11.1,Инвентаризация и документирование криптографии,V11.1.3,"Убедитесь, что используются механизмы обнаружения криптографии для идентификации всех случаев применения криптографии в системе , включая операции шифрования, хеширования и цифровой подписи.",,,✓,,
V11,Криптография,V11.1,Инвентаризация и документирование криптографии,V11.1.4,"Убедитесь, что ведётся и поддерживается инвентаризация криптографических средств. В неё должен входить документированный план, описывающий переход на новые криптографические стандарты, такие как постквантовая криптография, чтобы своевременно реагировать на будущие угрозы.",,,✓,,
V11,Криптография,V11.2,Безопасная реализация криптографии,V11.2.1,"Убедитесь, что для криптографических операций используются утвержденные в индустрии реализации (включая библиотеки и аппаратные реализации).",,✓,✓,,
V11,Криптография,V11.2,Безопасная реализация криптографии,V11.2.2,"Убедитесь, что архитектура приложения поддерживает быструю реконфигурацию, усовершенствование или смену в любой момент случайных чисел, аутентифицированного шифрования, MAC, алгоритмов хеширования, длин ключей, количества раундов, шифров и режимов шифрования для защиты от криптографических атак. Также должна поддерживаться возможность смены ключей, паролей и повторного шифрования данных. Это позволит беспрепятственно перейти на постквантовую криптографию (PQC), как только станут широко доступны высоконадёжные реализации одобренных схем или стандартов PQC.",,✓,✓,,
V11,Криптография,V11.2,Безопасная реализация криптографии,V11.2.3,"Убедитесь, что все криптографические примитивы используют как минимум 128-бит стойкости с учетом алгоритма, размера ключа и конфигурации. Например, 256-битный ECC ключ обеспечивает примерно 128 бит безопасности, тогда как для достижения того же уровня безопасности в RSA требуется ключ длиной 3072 бита.",,✓,✓,,
V11,Криптография,V11.2,Безопасная реализация криптографии,V11.2.4,"Убедитесь, что все криптографические операции выполняются за константное время, без использования «short-circuit» операций в сравнениях, вычислениях, возвратах функций для избежания утечек информации.",,,✓,,
V11,Криптография,V11.2,Безопасная реализация криптографии,V11.2.5,"Убедитесь, что все криптографические модули обеспечивают безопасное завершение работы при ошибках, а обработка ошибок реализована таким образом, чтобы не создавать уязвимостей, например, таких как атаки Padding Oracle.",,,✓,,
V11,Криптография,V11.3,Алгоритмы шифрования,V11.3.1,"Убедитесь, что не используются небезопасные режимы блочного шифрования (н-р, ECB) и слабые схемы дополнения (padding) (н-р, PKCS#1 v1.5).",✓,✓,✓,,
V11,Криптография,V11.3,Алгоритмы шифрования,V11.3.2,"Убедитесь, что используются только утверждённые шифры и режимы, такие как AES с GCM.",✓,✓,✓,,
V11,Криптография,V11.3,Алгоритмы шифрования,V11.3.3,"Убедитесь, что зашифрованные данные защищены от несанкционированного изменения, предпочтительно с использованием утверждённого метода аутентифицированного шифрования или путём комбинирования утверждённого метода шифрования с утверждённым алгоритмом MAC.",,✓,✓,,
V11,Криптография,V11.3,Алгоритмы шифрования,V11.3.4,"Убедитесь, что случайные числа (nonce), векторы инициализации (IV) и другие одноразовые числа не используются более одного раза для одной и той же пары ключа шифрования и элемента данных. Метод их генерации должен соответствовать требованиям используемого алгоритма.",,,✓,,
V11,Криптография,V11.3,Алгоритмы шифрования,V11.3.5,"Убедитесь, что любая комбинация алгоритма шифрования и алгоритма MAC работает в режиме encrypt-then-MAC (EtM).",,,✓,,
V11,Криптография,V11.4,Хеширование и функции на основе хеширования,V11.4.1,"Убедитесь, что только утвержденные хэш-функции используются для стандартных сценариев использования в криптографии, включая цифровую подпись, HMAC, KDF, генерацию случайных чисел. Запрещено использовать неустойчивые хэш-функции, (н-р, MD5) для любого использования в криптографии.",✓,✓,✓,,
V11,Криптография,V11.4,Хеширование и функции на основе хеширования,V11.4.2,"Убедитесь, что пароли хранятся с использованием утверждённой, вычислительно затратной функции генерации ключа (также известной как «функция хеширования паролей»), с параметрами, настроенными в соответствии с актуальными рекомендациями. Настройки должны обеспечивать баланс между безопасностью и производительностью, чтобы сделать атаки перебором достаточно сложными для требуемого уровня безопасности.",,✓,✓,,
V11,Криптография,V11.4,Хеширование и функции на основе хеширования,V11.4.3,"Убедитесь, что хэш-функции, используемые в формировании цифровой подписи, как часть аутентификации и целостности данных, устойчивы к коллизиям и имеют достаточную длину.",,✓,✓,,
V11,Криптография,V11.4,Хеширование и функции на основе хеширования,V11.4.4,"Убедитесь, что приложение использует утвержденную функцию генерации ключа с использованием параметров расширения ключа (key stretching) при генерации ключа из пароля. Параметры должны быть сбалансированы с точки зрения безопасности, производительности и устойчивости к атакам полного перебора при компрометации результирующего криптографического ключа.",,✓,✓,,
V11,Криптография,V11.5,Случайные значения,V11.5.1,"Убедитесь, что все случайные числа и строки, которые должны быть непредсказуемы, должны быть сгенерированы с помощью CSPRNG и иметь хотя бы 128 бит энтропии. Учтите, что UUID не удовлетворяют данному условию.",,✓,✓,,
V11,Криптография,V11.5,Случайные значения,V11.5.2,"Убедитесь, что механизм генерации случайных чисел является надежным даже при высокой нагрузке.",,,✓,,
V11,Криптография,V11.6,Криптография с публичным ключом,V11.6.1,"Убедитесь, что только утвержденные криптографические алгоритмы и режимы операций используются для генерации ключа и инициализации случайного значения для его генерации (seeding), а также для генерации цифровой подписи и верификации. Алгоритмы генерации ключей не должны генерировать небезопасные ключи уязвимые к известным атакам, например, ключи RSA уязвимы к факторизации Ферма.",,✓,✓,,
V11,Криптография,V11.6,Криптография с публичным ключом,V11.6.2,"Убедитесь, что для обмена ключами используются утверждённые криптографические алгоритмы (например, Диффи-Хеллман) с особым вниманием к обеспечению использования безопасных параметров. Это предотвратит атаки на процесс установления ключа, которые могут привести к атакам «человек посередине» или криптографическим взломам.",,,✓,,
V11,Криптография,V11.7,Шифрование данных в процессе использования,V11.7.1,"Убедитесь, что используется полное шифрование памяти, которое защищает конфиденциальные данные во время их использования, предотвращая доступ к ним неавторизованных пользователей или процессов.",,,✓,,
V11,Криптография,V11.7,Шифрование данных в процессе использования,V11.7.2,"Убедитесь, что минимизация данных обеспечивает раскрытие минимально необходимого объёма данных во время обработки, а также что данные шифруются сразу после использования или как можно скорее.",,,✓,,
V12,Безопасная коммуникация,V12.1,Общие рекомендации по безопасности TLS,V12.1.1,"Убедитесь, что включены только актуальные и рекомендуемые версии протокола TLS, такие как TLS 1.2 и TLS 1.3. Наиболее свежая версия TLS должна быть выбрана как предпочтительная.",✓,✓,✓,,
V12,Безопасная коммуникация,V12.1,Общие рекомендации по безопасности TLS,V12.1.2,"Убедитесь, что включены рекомендуемые шифронаборы (cipher suites), предпочтение также стоит отдать самому сильному шифронабору. L3 приложения должны поддерживать только те наборы шифров (cipher suites), которые обеспечивают прямую (forward) секретность. Пояснение: Прямая секретность (Forward Secrecy, FS) — это криптографическая особенность, при которой сессионные ключи уникальны для каждой сессии и не зависят от долгосрочных ключей. Это гарантирует, что даже при компрометации долгосрочного ключа злоумышленник не сможет расшифровать ранее перехваченные зашифрованные сессии.",,✓,✓,,
V12,Безопасная коммуникация,V12.1,Общие рекомендации по безопасности TLS,V12.1.3,"Убедитесь, что приложение проверяет доверенность клиентских сертификатов mTLS, прежде чем использовать идентификацию по сертификату для аутентификации или авторизации.",,✓,✓,,
V12,Безопасная коммуникация,V12.1,Общие рекомендации по безопасности TLS,V12.1.4,"Убедитесь, что включена и настроена правильная проверка отзыва сертификатов, такая как Online Certificate Status Protocol (OCSP) Stapling.",,,✓,,
V12,Безопасная коммуникация,V12.1,Общие рекомендации по безопасности TLS,V12.1.5,"Убедитесь, что в настройках TLS приложения включена функция Encrypted Client Hello (ECH) для предотвращения раскрытия конфиденциальных метаданных, таких как Server Name Indication (SNI), во время процесса TLS-рукопожатия.",,,✓,,
V12,Безопасная коммуникация,V12.2,HTTPS коммуникация с внешними сервисами,V12.2.1,"Убедитесь, что для всех соединений между клиентом и внешними HTTP-сервисами используется TLS и не происходит отката к небезопасным или незашифрованным протоколам.",✓,✓,✓,,
V12,Безопасная коммуникация,V12.2,HTTPS коммуникация с внешними сервисами,V12.2.2,"Убедитесь, что внешние сервисы используют публично доверенные TLS-сертификаты.",✓,✓,✓,,
V12,Безопасная коммуникация,V12.3,Общая безопасность межсервисного взаимодействия,V12.3.1,"Убедитесь, что для всех входящих и исходящих соединений приложения используется зашифрованный протокол, например TLS, включая системы мониторинга, инструменты управления, удалённый доступ и SSH, промежуточное ПО, базы данных, мейнфреймы, партнёрские системы и внешние API. Сервер не должен допускать откат к небезопасным или незашифрованным протоколам.",,✓,✓,,
V12,Безопасная коммуникация,V12.3,Общая безопасность межсервисного взаимодействия,V12.3.2,"Убедитесь, что TLS-клиент проверяет сертификат сервера до установления защищенного соединения с TLS-сервером.",,✓,✓,,
V12,Безопасная коммуникация,V12.3,Общая безопасность межсервисного взаимодействия,V12.3.3,"Убедитесь, что все внутренние HTTP-взаимодействия между компонентами приложения используют TLS или другой подходящий механизм транспортного шифрования, и не происходит откат к небезопасным или незашифрованным коммуникациям.",,✓,✓,,
V12,Безопасная коммуникация,V12.3,Общая безопасность межсервисного взаимодействия,V12.3.4,"Убедитесь, что TLS-соединения между внутренними сервисами используют доверенные сертификаты. Если используются внутренние или самоподписанные сертификаты, потребляющий сервис должен быть настроен на доверие только к конкретным внутренним центрам сертификации (CA) и конкретным самоподписанным сертификатам.",,✓,✓,,
V12,Безопасная коммуникация,V12.3,Общая безопасность межсервисного взаимодействия,V12.3.5,"Убедитесь, что сервисы, взаимодействующие внутри системы (intra-service communications), используют строгую аутентификацию для проверки каждого конечного узла. Для проверки подлинности взаимодействующих сторон должны применяться методы строгой аутентификации, такие как аутентификация TLS-клиента, с использованием инфраструктуры открытых ключей и механизмов, устойчивых к атакам повтора (replay attacks). Для микросервисных архитектур рекомендуется использование service mesh для упрощения управления сертификатами и повышения безопасности.",,,✓,,
V13,Конфигурация,V13.1,Документация конфигурации,V13.1.1,"Убедитесь, что все необходимые доступы приложения задокументированы. Сюда должны быть включены как внешние сервисы, от которых зависит приложение, так и сценарии, когда конечный пользователь может задавать адреса для внешнего подключения.",,✓,✓,,
V13,Конфигурация,V13.1,Документация конфигурации,V13.1.2,"Убедитесь, что для каждого сервиса, используемого приложением, в документации определено максимальное количество одновременных соединений (например, лимиты пула соединений) и описано поведение приложения при достижении этого лимита, включая любые механизмы отказоустойчивости или восстановления, чтобы предотвратить ситуации отказа в обслуживании (DoS).",,,✓,,
V13,Конфигурация,V13.1,Документация конфигурации,V13.1.3,"Убедитесь, что в документации приложения определены стратегии управления ресурсами для каждой внешней системы или сервиса, которые оно использует (например, базы данных, файловые дескрипторы, потоки, HTTP-соединения). Стратегии должны включать процедуры освобождения ресурсов, настройки таймаутов, обработку сбоев, а также, если реализована логика повторных попыток, указание лимитов, задержек и алгоритмов back-off. Для синхронных HTTP-запросов должны быть заданы короткие таймауты, а повторные запросы должны быть отключены, либо строго ограничены по числу попыток, чтобы предотвратить каскадные задержки и истощение ресурсов.",,,✓,,
V13,Конфигурация,V13.1,Документация конфигурации,V13.1.4,"Убедитесь, что в документации приложения определены секреты, критически важные для безопасности приложения, а также установлен график их ротации в соответствии с моделью угроз организации и её бизнес-требованиями.",,,✓,,
V13,Конфигурация,V13.2,Конфигурация бэкенд соединений,V13.2.1,"Убедитесь, что коммуникации между компонентами бэкенда приложения (включая API, промежуточное ПО и уровни данных), которые не поддерживают стандартный механизм пользовательских сессий, проходят с аутентификацией. Аутентификация должна использовать индивидуальные сервисные аккаунты, краткосрочные токены или аутентификацию на основе сертификатов, а не постоянные учётные данные, такие как пароли, API-ключи или общие аккаунты с привилегированным доступом.",,✓,✓,,
V13,Конфигурация,V13.2,Конфигурация бэкенд соединений,V13.2.2,"Убедитесь, что коммуникации между компонентами бэкенда приложения, включая локальные или системные службы, API, промежуточное ПО и уровни данных, выполняются с использованием аккаунтов, которым назначены минимально необходимые привилегии.",,✓,✓,,
V13,Конфигурация,V13.2,Конфигурация бэкенд соединений,V13.2.3,"Убедитесь, что если для аутентификации в сервисе используются учётные данные, то используемые потребителем учётные данные не являются стандартными (например, root/root или admin/admin).",,✓,✓,,
V13,Конфигурация,V13.2,Конфигурация бэкенд соединений,V13.2.4,"Убедитесь, что используется белый список (allowlist) для определения внешних ресурсов или систем, с которыми приложению разрешено взаимодействовать (например, для исходящих запросов, загрузки данных или доступа к файлам). Этот белый список может быть реализован на уровне приложения, веб-сервера, межсетевого экрана или комбинации различных уровней.",,✓,✓,,
V13,Конфигурация,V13.2,Конфигурация бэкенд соединений,V13.2.5,"Убедитесь, что веб- или прикладной сервер настроен с белым списком ресурсов или систем, к которым сервер может отправлять запросы или из которых может загружать данные и файлы.",,✓,✓,,
V13,Конфигурация,V13.2,Конфигурация бэкенд соединений,V13.2.6,"Убедитесь, что при подключении приложения к другим сервисам соблюдается задокументированная конфигурация для каждого соединения, включая максимальное количество параллельных соединений, поведение при достижении их максимума, таймауты и стратегии повторных попыток подключения.",,,✓,,
V13,Конфигурация,V13.3,Управление секретами,V13.3.1,"Убедитесь, что для безопасного создания, хранения, контроля доступа и уничтожения секретов бэкенда используется решение для управления секретами, например, хранилище ключей (key vault). Секретами могут быть пароли, ключевой материал, интеграции с базами данных и сторонними системами, ключи и seed-значения для токенов с ограниченным временем действия, другие внутренние секреты и API-ключи. Секреты не должны включаться в исходный код приложения или артефакты сборки. Для приложений уровня L3 необходимо использовать аппаратное решение, например, аппаратный модуль безопасности (HSM).",,✓,✓,,
V13,Конфигурация,V13.3,Управление секретами,V13.3.2,"Убедитесь, что доступ к секретным ресурсам осуществляется в соответствии с принципом минимально необходимых привилегий (least privilege).",,✓,✓,,
V13,Конфигурация,V13.3,Управление секретами,V13.3.3,"Убедитесь, что все криптографические операции выполняются с использованием изолированного модуля безопасности (например, хранилища ключей или аппаратного модуля безопасности), чтобы надежно управлять ключевым материалом и защищать его от утечки за пределы модуля безопасности.",,,✓,,
V13,Конфигурация,V13.3,Управление секретами,V13.3.4,"Убедитесь, что секреты настроены на срок действия и ротацию в соответствии с документацией приложения.",,,✓,,
V13,Конфигурация,V13.4,Непреднамеренная утечка информации,V13.4.1,"Убедитесь, что приложение развернуто либо без метаданных систем контроля версий (включая папки .git или .svn), либо так, чтобы эти папки были недоступны как извне, так и для самого приложения.",✓,✓,✓,,
V13,Конфигурация,V13.4,Непреднамеренная утечка информации,V13.4.2,"Убедитесь, что режимы отладки отключены для всех компонентов в промышленной среде, чтобы предотвратить раскрытие функций отладки и утечку информации.",,✓,✓,,
V13,Конфигурация,V13.4,Непреднамеренная утечка информации,V13.4.3,"Убедитесь, что веб-серверы не показывают клиентам списки содержимого каталогов, если это явно не предусмотрено.",,✓,✓,,
V13,Конфигурация,V13.4,Непреднамеренная утечка информации,V13.4.4,"Убедитесь, что метод HTTP TRACE не поддерживается в продуктовой среде, чтобы избежать потенциальной утечки информации.",,✓,✓,,
V13,Конфигурация,V13.4,Непреднамеренная утечка информации,V13.4.5,"Убедитесь, что документация (например, по внутренним API) и мониторинговые эндпоинты не доступны, если это явно не предусмотрено.",,✓,✓,,
V13,Конфигурация,V13.4,Непреднамеренная утечка информации,V13.4.6,"Убедитесь, что приложение не раскрывает подробную информацию о версиях компонентов бэкенда.",,,✓,,
V13,Конфигурация,V13.4,Непреднамеренная утечка информации,V13.4.7,"Убедитесь, что веб-слой настроен на обслуживание только файлов с определёнными расширениями, чтобы предотвратить непреднамеренную утечку информации, конфигураций и исходного кода.",,,✓,,
V14,Защита информации,V14.1,Документация по защите информации,V14.1.1,"Убедитесь, что все конфиденциальные данные, создаваемые и обрабатываемые приложением, идентифицированы и классифицированы по уровням защиты. Включая закодированные данные, которые легко декодируются, например, строки Base64 или незашифрованные данные в полезной нагрузке JWT. Уровни защиты должны учитывать требования по защите данных и конфиденциальности, которым должно соответствовать приложение.",,✓,✓,,
V14,Защита информации,V14.1,Документация по защите информации,V14.1.2,"Убедитесь, что для каждого уровня защиты конфиденциальных данных требования к защите задокументированы. Они должны включать (но не ограничиваться) требования по шифрованию, проверке целостности, срокам хранения, способам логирования данных, контролю доступа к чувствительным данным в логах, шифрованию на уровне базы данных, применению технологий повышения конфиденциальности, а также другим требованиям по конфиденциальности.",,✓,✓,,
V14,Защита информации,V14.2,Базовые меры по защите информации,V14.2.1,"Убедитесь, что конфиденциальные данные передаются на сервер только в теле HTTP-запроса или в заголовках. URL и строка запроса не должны содержать конфиденциальную информацию, такую как API-ключ или сессионный токен.",✓,✓,✓,,
V14,Защита информации,V14.2,Базовые меры по защите информации,V14.2.2,"Убедитесь, что приложение предотвращает кэширование конфиденциальных данных в серверных компонентах, таких как балансировщики нагрузки и кэши приложений, либо гарантирует их надежное удаление после использования.",,✓,✓,,
V14,Защита информации,V14.2,Базовые меры по защите информации,V14.2.3,"Убедитесь, что заранее определённые конфиденциальные данные не отправляются ненадёжным сторонам (например, системам трекинга пользователей), чтобы предотвратить нежелательный сбор данных вне контроля приложения.",,✓,✓,,
V14,Защита информации,V14.2,Базовые меры по защите информации,V14.2.4,"Убедитесь, что для конфиденциальных данных реализованы меры по шифрованию, проверке целостности, срокам хранения, способам логирования, контролю доступа к данным в логах, а также применяются технологии повышения конфиденциальности в соответствии с документацией для соответствующего уровня защиты данных.",,✓,✓,,
V14,Защита информации,V14.2,Базовые меры по защите информации,V14.2.5,"Убедитесь, что механизмы кэширования настроены так, чтобы кэшировать только ответы с ожидаемым типом содержимого для данного ресурса и не содержать конфиденциального динамического контента. При обращении к несуществующему файлу, веб-сервер должен возвращать ответ 404 или 302, а не подменять на другой существующий файл, что позволит предотвратить атаки типа Web Cache Deception.",,,✓,,
V14,Защита информации,V14.2,Базовые меры по защите информации,V14.2.6,"Убедитесь, что приложение возвращает только минимально необходимый объем конфиденциальных данных для выполнения своей функциональности. Например, показывает только часть цифр номера кредитной карты, а не полный номер. Если требуется отображение полных данных, они должны быть замаскированы в пользовательском интерфейсе, пока пользователь специально не запросил их просмотр.",,,✓,,
V14,Защита информации,V14.2,Базовые меры по защите информации,V14.2.7,"Убедитесь, что конфиденциальная информация подлежит классификации по срокам хранения, чтобы устаревшие или ненужные данные удалялись автоматически, по расписанию или по мере необходимости.",,,✓,,
V14,Защита информации,V14.2,Базовые меры по защите информации,V14.2.8,"Убедитесь, что конфиденциальная информация удаляется из метаданных файлов, загружаемых пользователями, если пользователь явно не согласился на ее хранение.",,,✓,,
V14,Защита информации,V14.3,Защита данных на стороне клиента,V14.3.1,"Убедитесь, что аутентифицированные данные очищаются из клиентского хранилища, например, из DOM браузера, после завершения работы клиента или сессии. Заголовок HTTP-ответа Clear-Site-Data может помочь в этом, но клиентская сторона также должна уметь очищать данные, если соединение с сервером недоступно при завершении сессии.",✓,✓,✓,,
V14,Защита информации,V14.3,Защита данных на стороне клиента,V14.3.2,"Убедитесь, что приложение устанавливает HTTP-заголовки, достаточные для предотвращения кэширования (например, Cache-Control: no-store), чтобы конфиденциальные данные не сохранялись в браузерах.",,✓,✓,,
V14,Защита информации,V14.3,Защита данных на стороне клиента,V14.3.3,"Убедитесь, что данные, хранящиеся в браузерном хранилище (например, localStorage, sessionStorage, IndexedDB или cookie), не содержат конфиденциальной информации, за исключением сессионных токенов.",,✓,✓,,
V15,Безопасная разработка и архитектура,V15.1,Документация по безопасной разработке и архитектуре,V15.1.1,"Убедитесь, что в документации по приложению определены сроки устранения уязвимостей на основе оценки рисков для внешних зависимостей с уязвимостями и для обновления библиотек в целом, чтобы минимизировать риск, связанный с этими компонентами.",✓,✓,✓,,
V15,Безопасная разработка и архитектура,V15.1,Документация по безопасной разработке и архитектуре,V15.1.2,"Убедитесь, что ведется реестр всех используемых сторонних библиотек (например, Software Bill of Materials, SBOM), с обязательной проверкой, что компоненты получены из предопределенных, доверенных и регулярно поддерживаемых репозиториев.",,✓,✓,,
V15,Безопасная разработка и архитектура,V15.1,Документация по безопасной разработке и архитектуре,V15.1.3,"Убедитесь, что в документации приложения указан функционал, требующий значительных временных или вычислительных ресурсов. Необходимо указать, как предотвратить потерю доступности из-за чрезмерного использования этого функционала и как избежать ситуаций, когда формирование ответа занимает больше времени, чем установленный системой таймаут. Возможные меры защиты могут включать асинхронную обработку, использование очередей и ограничение количества параллельных процессов для каждого пользователя и приложения.",,✓,✓,,
V15,Безопасная разработка и архитектура,V15.1,Документация по безопасной разработке и архитектуре,V15.1.4,"Убедитесь, что в документации приложения указаны внешние библиотеки, которые считаются «компонентами с повышенным риском».",,,✓,,
V15,Безопасная разработка и архитектура,V15.1,Документация по безопасной разработке и архитектуре,V15.1.5,"Убедитесь, что в документации приложения выделены те части приложения, в которых используются «функционал с повышенным риском».",,,✓,,
V15,Безопасная разработка и архитектура,V15.2,Архитектура безопасности и зависимости,V15.2.1,"Убедитесь, что приложение содержит только те компоненты, которые не нарушили задокументированные сроки обновления и исправления.",✓,✓,✓,,
V15,Безопасная разработка и архитектура,V15.2,Архитектура безопасности и зависимости,V15.2.2,"Убедитесь, что в приложении реализованы меры защиты от потери доступности из-за функциональности, требующей много времени или ресурсов, на основе задокументированных решений и стратегий безопасности для этого.",,✓,✓,,
V15,Безопасная разработка и архитектура,V15.2,Архитектура безопасности и зависимости,V15.2.3,"Убедитесь, что производственная среда включает только те функции, которые необходимы для работы приложения, и не предоставляет лишние функции, такие как тестовый код, примеры кода и инструменты разработки.",,✓,✓,,
V15,Безопасная разработка и архитектура,V15.2,Архитектура безопасности и зависимости,V15.2.4,"Убедитесь, что сторонние компоненты и все их транзитивные зависимости загружаются только из ожидаемых репозиториев (внутренних или внешних) и отсутствует риск атаки через подмену зависимостей (dependency confusion attack)",,,✓,,
V15,Безопасная разработка и архитектура,V15.2,Архитектура безопасности и зависимости,V15.2.5,"Убедитесь, что приложение реализует дополнительные меры защиты для тех частей приложения, которые документированы как содержащие «функционал с повышенным риском» или использующие сторонние библиотеки, считающиеся «функционалом с повышенным риском». Это могут быть такие методы, как «песочница», инкапсуляция, контейнеризация или изоляция на сетевом уровне, чтобы задержать и предотвратить продвижение (pivoting) злоумышленников, скомпрометировавших одну часть приложения, к другим частям приложения.",,,✓,,
V15,Безопасная разработка и архитектура,V15.3,Безопасное программирование,V15.3.1,"Убедитесь, что приложение возвращает только необходимое подмножество полей из объекта данных. Например, оно не должно возвращать весь объект данных, поскольку некоторые отдельные поля должны быть недоступны пользователям.",✓,✓,✓,,
V15,Безопасная разработка и архитектура,V15.3,Безопасное программирование,V15.3.2,"Убедитесь, что при вызовах внешних URL-адресов бэкэнд приложения настроен так, чтобы не выполнять перенаправления, если только это не предусмотрено функционалом.",,✓,✓,,
V15,Безопасная разработка и архитектура,V15.3,Безопасное программирование,V15.3.3,"Убедитесь, что в приложении реализованы защитные механизмы против атак типа массового присвоения (mass assignment) путем строгого ограничения разрешенных полей для каждого контроллера и действия, исключая возможность добавления или изменения значений полей, которые не должны быть доступны для данной конкретной операции.",,✓,✓,,
V15,Безопасная разработка и архитектура,V15.3,Безопасное программирование,V15.3.4,"Убедитесь, что все прокси и промежуточное ПО корректно передают исходный IP-адрес пользователя, используя доверенные поля данных, которые не могут быть изменены конечным пользователем, а приложение и веб-сервер используют это правильное значение для ведения логирования и принятия решений по безопасности, таких как ограничение запросов. При этом следует учитывать, что даже исходный IP-адрес может быть ненадежным из-за динамических IP-адресов, VPN или корпоративных файрволов.",,✓,✓,,
V15,Безопасная разработка и архитектура,V15.3,Безопасное программирование,V15.3.5,"Убедитесь, что приложение явно проверяет соответствие переменных ожидаемому типу данных и использует строгие операции сравнения. Это необходимо для предотвращения уязвимостей, связанных с type juggling и type confusion, вызванных тем, что код приложения делает предположения о типе переменной.",,✓,✓,,
V15,Безопасная разработка и архитектура,V15.3,Безопасное программирование,V15.3.6,"Убедитесь, что JavaScript-код написан таким образом, чтобы предотвратить prototype pollution, например, используя Set() или Map() вместо обычных литералов объекта.",,✓,✓,,
V15,Безопасная разработка и архитектура,V15.3,Безопасное программирование,V15.3.7,"Убедитесь, что приложение защищено от атак типа HTTP Parameter Pollution (HPP), особенно если используемый фреймворк не различает источники параметров запроса (строка запроса, тело запроса, куки или заголовки).",,✓,✓,,
V15,Безопасная разработка и архитектура,V15.4,Безопасная работа с параллельными процессами,V15.4.1,"Убедитесь, что к общим объектам в многопоточном коде (например, кэшам, файлам или объектам в памяти, используемым несколькими потоками) используется безопасный многопоточный доступ и механизмов синхронизации, таких как блокировки или семафоры, чтобы избежать состояний гонки и повреждения данных.",,,✓,,
V15,Безопасная разработка и архитектура,V15.4,Безопасная работа с параллельными процессами,V15.4.2,"Убедитесь, что проверки состояния ресурса, например его существования или разрешений, а также зависящие от него действия выполняются как одна атомарная операция, чтобы предотвратить условия гонки времени проверки и времени использования (TOCTOU). Например, проверка существования файла перед его открытием или проверка прав доступа пользователя перед его предоставлением.",,,✓,,
V15,Безопасная разработка и архитектура,V15.4,Безопасная работа с параллельными процессами,V15.4.3,"Убедитесь, что блокировки применяются согласованно, чтобы предотвратить взаимные блокировки потоков (deadlocks) или их бесконечные повторы, а также что логика блокировки инкапсулирована в коде, отвечающем за управление ресурсом. Это гарантирует, что блокировки не могут быть случайно или намеренно изменены внешними классами или кодом.",,,✓,,
V15,Безопасная разработка и архитектура,V15.4,Безопасная работа с параллельными процессами,V15.4.4,"Убедитесь, что политики распределения ресурсов предотвращают нехватку ресурсов у потоков, обеспечивая справедливый доступ к ресурсам, например, используя пулы потоков, позволяя потокам с более низким приоритетом выполняться в течение разумного периода времени.",,,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.1,Документация по ведению логов,V16.1.1,"Убедитесь в существовании реестра, в котором документируется ведение журнала на каждом уровне технологического стека приложения, включая какие события регистрируются, форматы логов, где хранятся эти журналы, как они используются, как контролируется доступ к ним и как долго хранятся журналы.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.2,Общее журналирование,V16.2.1,"Убедитесь, что каждая запись журнала содержит необходимые метаданные (например, когда, где, кто, что), которые позволят провести подробное исследование временной шкалы, когда произошло событие.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.2,Общее журналирование,V16.2.2,"Убедитесь, что все источники времени компонентов системы журналирования синхронизированы, а временные метки в метаданных событий безопасности используют UTC или содержат явное указание смещения часового пояса. Рекомендуется применять UTC для обеспечения согласованности в распределённых системах и предотвращения ошибок при переходе на летнее/зимнее время.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.2,Общее журналирование,V16.2.3,"Убедитесь, что приложение записывает и передаёт логи исключительно в те файлы и сервисы, которые указаны в реестре журналирования.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.2,Общее журналирование,V16.2.4,"Убедитесь, что логи могут быть прочитаны и коррелированы используемой системой обработки журналов, предпочтительно с использованием общего стандартного формата логирования.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.2,Общее журналирование,V16.2.5,"Убедитесь, что приложение применяет соответствующие меры защиты при логировании конфиденциальных данных в зависимости от уровня их чувствительности: например, полностью запрещает запись в логи таких данных, как учетные данные или платежные реквизиты, а для других данных (например, сессионных токенов) использует хеширование или частичное/полное маскирование.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.3,Инциденты безопасности,V16.3.1,"Убедитесь, что все операции аутентификации регистрируются, включая успешные и неудачные попытки. Также следует фиксировать дополнительные метаданные, такие как тип аутентификации или использованные факторы проверки.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.3,Инциденты безопасности,V16.3.2,"Убедитесь, что ведется журнал неудачных попыток авторизации. Для уровня L3 это должно включать в себя журналирование всех решений об авторизации, включая журналирование доступа к конфиденциальным данным (без регистрации самих конфиденциальных данных).",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.3,Инциденты безопасности,V16.3.3,"Убедитесь, что приложение регистрирует все события безопасности, определенные в документации, а также фиксирует попытки обхода механизмов защиты, включая проверку входных данных, бизнес-логики и системы защиты от автоматизированных атак.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.3,Инциденты безопасности,V16.3.4,"Убедитесь, что приложение регистрирует в журналах неожиданные ошибки и сбои механизмов безопасности, включая, например, ошибки TLS-соединения на стороне сервера.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.4,Защита журналов,V16.4.1,"Убедитесь, что все компоненты системы логирования корректно кодируют данные, чтобы предотвратить атаки типа внедрения в журналы (log injection).",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.4,Защита журналов,V16.4.2,"Убедитесь, что логи защищены от неавторизованного доступа и не могут быть модифицированы.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.4,Защита журналов,V16.4.3,"Убедитесь, что логи безопасно передаются в логически изолированную систему для анализа, обнаружения угроз, генерации оповещений и эскалации инцидентов. Это гарантирует сохранность журналов даже в случае компрометации основного приложения.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.5,Обработка ошибок,V16.5.1,"Убедитесь, что при возникновении непредвиденной или связанной с безопасностью ошибки пользователю возвращается только общее сообщение, гарантируя отсутствие раскрытия конфиденциальных внутренних данных системы, таких как трассировки стека, запросы, секретные ключи и токены.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.5,Обработка ошибок,V16.5.2,"Убедитесь, что приложение продолжает работать в безопасном режиме при недоступности внешних ресурсов, используя такие механизмы, как автоматические выключатели (circuit breakers) или плавное снижение функциональности (graceful degradation).",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.5,Обработка ошибок,V16.5.3,"Убедитесь, что приложение корректно и безопасно завершает работу при возникновении исключений, предотвращая опасные сценарии по типу «fail-open», когда, например, транзакция ошибочно выполняется, несмотря на ошибки в логике валидации.",,✓,✓,,
V16,Журналирование событий безопасности и обработка ошибок,V16.5,Обработка ошибок,V16.5.4,"Убедитесь, что определён обработчик ошибок «крайние меры», который будет перехватывать все необработанные ошибки. Это необходимо как для предотвращения потери информации об ошибках, которая должна быть записана в файлы журналов, так и для того, чтобы ошибка не остановила весь процесс приложения, что привело бы к потере доступности.",,,✓,,
V17,WebRTC,V17.1,TURN-сервер,V17.1.1,"Убедитесь, что сервис TURN (Traversal Using Relays around NAT) разрешает доступ только к IP-адресам, не зарезервированным для специальных целей (например, внутренние сети, широковещательная рассылка, loopback-адреса). Данное требование применяется как к IPv4, так и к IPv6 адресам.",,✓,✓,,
V17,WebRTC,V17.1,TURN-сервер,V17.1.2,"Убедитесь, что сервис TURN (Traversal Using Relays around NAT) защищен от исчерпания ресурсов при попытках легитимных пользователей открыть чрезмерное количество портов на сервере.",,,✓,,
V17,WebRTC,V17.2,Требования к медиасерверам,V17.2.1,"Убедитесь, что ключ сертификата Datagram Transport Layer Security (DTLS) управляется и защищается в соответствии с документированной политикой управления криптографическими ключами.",,✓,✓,,
V17,WebRTC,V17.2,Требования к медиасерверам,V17.2.2,"Убедитесь, что медиасервер настроен на использование только одобренных наборов шифров Datagram Transport Layer Security (DTLS) и защищенного профиля безопасности для расширения DTLS, применяемого при установке ключей для Secure Real-time Transport Protocol (DTLS-SRTP).",,✓,✓,,
V17,WebRTC,V17.2,Требования к медиасерверам,V17.2.3,"Убедитесь, что медиасервер проверяет аутентификацию Secure Real-time Transport Protocol (SRTP) для предотвращения атак с внедрением Real-time Transport Protocol (RTP), которые могут привести к отказу в обслуживании (Denial of Service) или вставке поддельного аудио-/видеоконтента в медиапотоки.",,✓,✓,,
V17,WebRTC,V17.2,Требования к медиасерверам,V17.2.4,"Убедитесь, что медиасервер способен продолжать обработку входящего медиатрафика при получении некорректных пакетов Secure Real-time Transport Protocol (SRTP).",,✓,✓,,
V17,WebRTC,V17.2,Требования к медиасерверам,V17.2.5,"Убедитесь, что медиасервер способен продолжать обработку входящего медиатрафика даже при флуде (массовой атаке) пакетами Secure Real-time Transport Protocol (SRTP) от легитимных пользователей.",,,✓,,
V17,WebRTC,V17.2,Требования к медиасерверам,V17.2.6,"Убедитесь, что медиасервер не подвержен уязвимости «Гонка ClientHello» (ClientHello Race Condition) в Datagram Transport Layer Security (DTLS), проверив наличие известных уязвимостей в публичных источниках или выполнив тестирование на воспроизведение условий гонки.",,,✓,,
V17,WebRTC,V17.2,Требования к медиасерверам,V17.2.7,"Убедитесь, что механизмы аудио- и видеозаписи, связанные с медиасервером, способны продолжать обработку входящего медиатрафика даже при флуде (массовой атаке) пакетов Secure Real-time Transport Protocol (SRTP) от легитимных пользователей.",,,✓,,
V17,WebRTC,V17.2,Требования к медиасерверам,V17.2.8,"Убедитесь, что сертификат Datagram Transport Layer Security (DTLS) проверяется на соответствие атрибуту отпечатка (fingerprint) в Session Description Protocol (SDP), с немедленным прекращением медиапотока в случае несоответствия — это гарантирует подлинность передаваемых данных.",,,✓,,
V17,WebRTC,V17.3,Сигнализация,V17.3.1,"Убедитесь, что сигнальный сервер способен продолжать обработку легитимных входящих сообщений сигнализации даже в условиях флуд-атаки. Для этого необходимо реализовать механизм ограничения частоты запросов (rate limiting) на уровне сигнализации.",,✓,✓,,
V17,WebRTC,V17.3,Сигнализация,V17.3.2,"Убедитесь, что сигнальный сервер способен продолжать обработку легитимных сообщений сигнализации даже при получении некорректных сообщений, которые могут вызвать отказ в обслуживании (Denial of Service, DoS). Для этого необходимо реализовать: проверку входных данных (input validation), безопасную обработку целочисленных переполнений (integer overflows), защиту от переполнения буферов (buffer overflows) и другие надежные методы обработки ошибок.",,✓,✓,,

